var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,1.317,1,0.987]],["body/components/AppComponent.html",[0,1.541,1,1.296,2,2.592,3,0.862,4,0.461,5,1.687,6,1.687,7,1.687,8,1.687,9,0.278,10,1.348,11,1.348,12,2.521,13,2.167,14,1.79,15,2.07,16,3.156,17,2.07,18,2.592,19,0.461,20,1.266,21,1.155,22,3.156,23,1.79,24,3.156,25,3.462,26,0.949,27,2.592,28,2.009,29,3.541,30,2.592,31,2.383,32,2.383,33,2.383,34,0.824,35,1.687,36,1.122,37,1.979,38,2.592,39,1.266,40,0.057,41,1.729,42,1.296,43,0.949,44,2.07,45,2.592,46,1.687,47,2.167,48,1.774,49,1.541,50,3.156,51,0.862,52,1.969,53,1.687,54,1.687,55,2.687,56,1.687,57,1.496,58,0.967,59,1.12,60,1.266,61,1.47,62,1.266,63,1.47,64,1.687,65,1.687,66,2.592,67,1.687,68,1.687,69,1.687,70,1.687,71,1.687,72,1.687,73,1.687,74,0.708,75,0.461,76,1.541,77,1.865,78,0.394,79,0.227,80,1.687,81,1.687,82,2.103,83,1.687,84,1.687,85,1.687,86,2.592,87,1.348,88,1.348,89,1.348,90,1.79,91,1.333,92,1.348,93,1.348,94,1.348,95,1.687,96,1.687,97,2.828,98,2.07,99,2.07,100,2.07,101,2.07,102,1.727,103,2.07,104,2.07,105,1.296,106,2.07,107,1.727,108,2.07,109,2.07,110,3.551,111,2.522,112,2.103,113,2.07,114,2.07,115,2.592,116,1.47,117,2.07,118,2.592,119,2.07,120,2.828,121,2.592,122,2.07,123,2.592,124,1.47,125,1.095,126,1.095,127,1.095,128,2.592,129,2.592,130,2.592,131,1.687,132,2.592,133,1.687,134,3.156,135,1.687,136,1.687,137,1.687,138,3.156,139,1.687,140,2.592,141,2.592,142,2.592,143,1.687,144,1.687,145,1.687,146,1.687,147,1.687,148,1.687,149,3.156,150,3.156,151,2.592,152,1.348,153,1.687,154,1.687,155,1.687,156,1.687,157,1.687,158,3.156,159,1.687,160,2.592,161,1.687,162,1.687,163,1.687,164,1.687,165,1.687,166,1.687,167,1.687,168,1.687,169,1.687,170,4.033,171,1.687,172,1.687,173,2.592,174,2.592,175,2.592,176,1.687,177,0.824,178,1.687,179,1.348,180,1.687,181,1.687,182,1.348,183,1.687,184,0.957,185,2.592,186,2.07,187,1.687,188,3.541,189,1.687,190,1.687,191,1.687,192,0.018,193,0.027,194,0.018]],["title/modules/AppModule.html",[195,1.317,196,1.139]],["body/modules/AppModule.html",[1,1.933,3,0.899,4,0.899,9,0.543,40,0.057,58,0.899,74,1.366,75,0.899,78,0.769,79,0.443,124,1.868,184,1.868,192,0.035,193,0.044,194,0.035,195,1.607,196,2.19,197,1.607,198,1.607,199,3.02,200,2.572,201,2.35,202,2.194,203,2.63,204,2.63,205,2.63,206,2.444,207,2.76,208,1.607,209,3.292,210,3.292,211,2.35,212,2.76,213,2.194,214,3.292,215,4.143,216,1.205,217,4.143,218,3.292,219,2.194,220,3.292,221,3.292,222,3.292]],["title/classes/AppPage.html",[79,0.363,223,1.797]],["body/classes/AppPage.html",[3,1.134,4,0.903,9,0.545,14,2.577,19,0.903,26,1.521,37,2.013,40,0.057,51,1.301,58,0.903,74,1.134,78,0.773,79,0.445,91,2.013,105,1.211,112,2.204,186,2.642,192,0.035,193,0.044,194,0.035,223,2.768,224,2.204,225,2.642,226,4.765,227,4.765,228,4.765,229,4.765,230,3.307,231,5.01,232,3.307,233,4.543,234,3.307,235,3.307,236,3.307,237,3.307,238,3.307,239,3.307,240,3.307,241,3.307,242,4.155,243,3.307,244,3.307,245,3.307,246,2.642,247,1.876,248,3.307]],["title/modules/AppServerModule.html",[195,1.317,249,1.317]],["body/modules/AppServerModule.html",[1,1.828,3,0.833,4,0.833,9,0.503,36,1.386,40,0.057,43,1.445,59,0.712,74,1.396,75,1.077,76,1.489,77,1.489,78,0.922,79,0.531,111,1.73,124,1.73,184,1.73,192,0.032,193,0.041,194,0.032,195,1.489,196,2.073,197,1.489,198,1.489,199,2.032,200,2.481,201,2.238,202,2.032,207,2.629,208,1.489,211,1.73,212,2.629,213,2.032,216,1.117,219,2.629,249,2.438,250,2.436,251,3.05,252,3.05,253,2.032,254,3.152,255,2.032,256,2.436,257,1.489,258,1.25,259,1.489,260,2.624,261,1.73,262,2.032,263,1.489,264,2.032,265,1.926,266,2.032,267,1.489,268,1.489,269,2.032,270,2.032,271,2.032,272,2.032,273,1.117,274,1.73,275,2.032]],["title/injectables/DeviceDetectorService.html",[36,0.854,258,0.854]],["body/injectables/DeviceDetectorService.html",[3,0.801,4,0.33,9,0.199,14,0.686,19,0.33,20,0.971,21,1.276,23,1.977,26,0.728,28,1.664,31,1.128,32,1.128,33,1.128,34,0.59,36,0.63,37,1.924,39,1.582,40,0.058,41,1.582,42,1.502,43,1.186,47,2.518,48,1.924,49,1.878,51,1.12,52,0.971,57,1.556,58,0.951,59,1.213,60,1.701,61,1.838,62,1.701,63,1.838,74,0.801,75,0.33,78,0.685,79,0.163,82,0.806,90,1.977,91,1.924,105,0.927,116,1.664,125,1.472,126,1.625,127,1.472,177,1.236,192,0.013,193,0.021,194,0.013,216,0.443,247,0.686,257,0.59,258,0.63,259,0.59,267,0.59,268,0.971,273,1.686,276,0.806,277,2.249,278,2.613,279,0.59,280,1.348,281,2.435,282,1.588,283,0.966,284,1.988,285,1.209,286,1.687,287,1.325,288,1.209,289,2.859,290,1.977,291,2.911,292,1.325,293,1.209,294,1.325,295,1.209,296,1.325,297,1.209,298,1.209,299,1.209,300,1.209,301,1.209,302,1.209,303,1.209,304,0.728,305,1.209,306,1.209,307,1.209,308,0.966,309,0.966,310,0.966,311,0.59,312,1.588,313,1.325,314,0.806,315,1.325,316,1.325,317,2.435,318,1.436,319,0.966,320,0.806,321,2.022,322,1.687,323,1.588,324,2.022,325,0.966,326,2.159,327,2.159,328,2.159,329,2.588,330,0.966,331,0.966,332,0.806,333,0.966,334,0.966,335,0.966,336,0.966,337,0.966,338,2.342,339,0.806,340,0.806,341,1.588,342,1.588,343,0.966,344,0.966,345,0.966,346,0.966,347,0.966,348,1.588,349,1.588,350,1.588,351,1.588,352,1.588,353,1.588,354,0.966,355,0.966,356,0.966,357,0.966,358,0.966,359,0.966,360,0.966,361,2.022,362,0.966,363,2.342,364,0.966,365,1.588,366,0.806,367,0.966,368,0.806,369,1.588,370,1.588,371,2.022,372,0.686,373,1.588,374,0.966,375,1.588,376,0.966,377,1.325,378,0.966,379,0.966,380,0.966,381,2.022,382,0.966,383,0.966,384,0.966,385,0.966,386,0.966,387,1.588,388,0.966,389,0.966,390,0.966,391,0.966,392,0.966,393,0.966,394,0.966,395,0.966,396,1.588,397,0.966,398,2.022,399,2.342,400,1.687,401,1.588,402,2.342,403,0.966,404,1.588,405,0.966,406,0.966,407,0.966,408,0.966,409,0.966,410,0.966,411,0.966,412,0.966,413,1.588,414,0.966,415,0.966]],["title/interfaces/DeviceInfo.html",[21,0.987,311,1.317]],["body/interfaces/DeviceInfo.html",[3,0.895,4,0.399,9,0.241,14,0.83,19,0.399,20,1.132,21,1.391,23,1.634,28,0.83,36,0.463,40,0.058,42,1.512,48,0.98,49,1.856,51,0.975,52,0.714,57,1.745,58,1.087,59,1.185,60,1.944,61,2.156,62,1.944,63,2.156,74,0.895,75,0.399,78,0.765,79,0.197,82,0.975,90,1.634,91,2.006,105,0.849,116,1.859,125,1.509,126,1.682,127,1.509,177,1.406,192,0.015,193,0.024,194,0.015,216,0.536,247,0.83,257,0.714,258,0.735,259,0.714,267,0.714,268,0.714,273,1.83,277,0.714,278,0.83,279,0.714,280,1.2,281,1.859,286,1.545,287,0.975,289,2.752,290,1.634,291,2.903,292,0.975,294,0.975,296,0.975,304,0.536,308,1.169,309,1.169,310,1.169,311,0.714,312,1.852,313,1.545,314,0.975,315,1.545,316,1.545,317,2.566,318,1.634,319,1.169,320,0.975,321,2.301,322,1.919,323,1.852,324,2.301,325,1.169,326,2.38,327,2.38,328,2.38,329,2.853,330,1.169,331,1.169,332,0.975,333,1.169,334,1.169,335,1.169,336,1.169,337,1.169,338,2.618,339,0.975,340,0.975,341,1.852,342,1.852,343,1.169,344,1.169,345,1.169,346,1.169,347,1.169,348,1.852,349,1.852,350,1.852,351,1.852,352,1.852,353,1.852,354,1.169,355,1.169,356,1.169,357,1.169,358,1.169,359,1.169,360,1.169,361,2.301,362,1.169,363,2.618,364,1.169,365,1.852,366,0.975,367,1.169,368,0.975,369,1.852,370,1.852,371,2.301,372,0.83,373,1.852,374,1.169,375,1.852,376,1.169,377,1.545,378,1.169,379,1.169,380,1.169,381,2.301,382,1.169,383,1.169,384,1.169,385,1.169,386,1.169,387,1.852,388,1.169,389,1.169,390,1.169,391,1.169,392,1.169,393,1.169,394,1.169,395,1.169,396,1.852,397,1.169,398,2.301,399,2.618,400,1.919,401,1.852,402,2.618,403,1.169,404,1.852,405,1.169,406,1.169,407,1.169,408,1.169,409,1.169,410,1.169,411,1.169,412,1.169,413,1.852,414,1.169,415,1.169,416,1.463]],["title/pipes/KeysPipe.html",[206,1.317,417,1.53]],["body/pipes/KeysPipe.html",[3,0.907,4,0.907,9,0.548,11,2.654,26,1.216,37,1.404,39,1.622,40,0.057,41,2.223,42,1.216,43,1.216,47,1.885,48,2.077,51,0.907,74,0.907,75,0.907,78,0.776,79,0.447,91,1.404,152,2.654,177,1.622,192,0.035,193,0.044,194,0.035,206,2.034,273,1.667,317,2.582,372,1.885,417,2.364,418,3.322,419,2.654,420,4.773,421,4.167,422,4.552,423,3.322,424,4.167,425,3.322,426,4.167,427,3.322,428,4.552,429,3.322,430,4.167,431,4.167,432,3.322]],["title/classes/ReTree.html",[79,0.363,280,0.987]],["body/classes/ReTree.html",[3,0.761,4,0.761,9,0.46,19,0.761,26,1.361,34,2.043,37,1.768,39,1.815,40,0.058,41,1.815,42,1.361,43,1.361,51,1.015,55,2.477,59,1.043,78,0.651,79,0.375,91,2.162,120,2.97,192,0.029,193,0.039,194,0.029,224,1.856,247,2.533,273,1.817,277,2.18,280,1.361,281,2.714,304,1.361,322,2.477,377,2.477,400,1.856,433,2.226,434,2.786,435,2.786,436,2.786,437,2.786,438,3.718,439,2.786,440,3.718,441,4.198,442,2.786,443,3.718,444,3.718,445,2.786,446,3.718,447,3.718,448,3.718,449,2.786,450,2.786,451,2.786,452,4.184,453,2.786,454,2.786,455,3.718,456,2.786,457,2.786,458,2.786,459,2.786]],["title/injectables/UniversalDeviceDetectorService.html",[258,0.854,265,1.317]],["body/injectables/UniversalDeviceDetectorService.html",[1,1.108,3,0.567,4,0.567,9,0.342,19,0.567,20,1.478,21,0.76,23,2.027,26,1.108,28,2.027,31,1.717,32,1.717,33,1.717,34,1.014,36,1.625,37,2.134,39,2.038,40,0.057,41,2.038,42,1.749,43,1.647,47,2.827,48,2.106,49,2.038,51,1.14,52,1.014,57,1.279,58,0.826,59,1.077,60,1.478,61,1.717,62,1.478,63,1.717,74,1.284,75,0.826,76,1.014,77,1.014,78,0.707,79,0.407,90,2.027,105,0.76,111,1.178,125,0.877,126,0.877,127,0.877,192,0.022,193,0.032,194,0.022,196,1.279,200,1.178,201,1.178,211,1.178,212,2.017,213,1.383,216,0.76,219,1.383,249,1.014,253,1.383,254,2.418,255,1.383,256,1.659,257,1.014,258,0.959,259,1.014,260,2.616,261,1.178,262,1.383,263,1.014,264,1.383,265,1.745,266,2.017,267,1.014,268,1.478,269,1.383,270,1.383,271,1.383,272,1.383,273,1.749,274,1.178,275,1.383,276,1.383,280,1.308,281,2.616,282,2.418,283,1.659,286,1.383,287,1.383,289,2.616,290,2.027,291,2.381,292,1.383,294,1.383,296,1.383,304,0.76,460,2.076,461,5.02,462,2.076,463,2.076,464,2.076,465,2.076,466,2.076,467,2.076,468,2.076,469,2.076,470,2.076,471,2.076,472,2.076,473,2.076,474,2.076,475,2.076,476,2.076]],["title/contributing.html",[477,1.515,478,1.29,479,2.273]],["body/contributing.html",[9,0.447,25,2.167,40,0.048,102,1.808,105,0.993,107,1.808,113,2.918,114,2.167,119,2.167,122,2.167,182,2.167,192,0.029,193,0.038,194,0.029,208,1.325,260,1.539,274,1.539,304,1.337,326,1.808,366,1.808,480,4.129,481,3.652,482,2.713,483,2.918,484,2.713,485,4.129,486,4.129,487,3.652,488,2.713,489,2.713,490,3.652,491,2.713,492,3.652,493,3.652,494,4.129,495,3.652,496,3.528,497,3.652,498,2.713,499,1.808,500,2.713,501,2.713,502,2.713,503,4.61,504,2.713,505,4.129,506,2.918,507,4.61,508,2.713,509,4.61,510,2.713,511,3.682,512,3.682,513,3.298,514,2.713,515,3.652,516,2.713,517,2.713,518,2.713,519,2.713,520,2.713,521,2.713,522,2.713,523,2.167,524,2.713,525,2.713,526,2.713,527,2.713,528,2.713,529,2.713,530,2.713,531,2.713,532,2.713,533,2.713,534,2.713,535,2.713,536,2.713,537,2.713,538,3.652,539,4.129,540,2.713,541,4.129,542,2.918,543,2.167,544,2.713,545,3.652,546,2.713,547,2.713,548,2.713,549,2.167,550,2.713,551,2.713,552,2.713,553,3.652,554,2.918,555,2.713,556,2.713,557,2.713,558,3.652,559,2.713,560,2.713,561,2.713,562,2.713,563,2.713,564,2.713,565,2.713,566,2.713,567,2.713,568,2.713,569,2.713,570,2.713,571,2.713,572,2.713,573,2.713,574,2.713,575,2.713,576,2.167,577,2.713,578,2.713,579,2.713,580,2.713,581,2.713,582,2.713,583,2.713,584,2.713,585,2.713,586,2.713,587,2.434,588,2.713,589,2.713,590,2.713,591,2.713,592,2.167,593,1.539]],["title/coverage.html",[594,2.905]],["body/coverage.html",[0,1.166,1,0.874,9,0.394,10,1.907,13,1.354,21,0.874,36,0.756,40,0.057,42,0.874,57,1.009,59,1.223,79,0.45,116,1.354,179,1.907,192,0.025,193,0.035,194,0.025,206,1.166,223,1.591,225,1.907,246,1.907,253,1.591,258,1.06,265,1.166,277,2.556,278,2.937,279,1.885,280,0.874,304,0.874,311,1.166,318,1.354,339,1.591,340,1.591,372,3.038,417,1.354,419,1.907,433,1.907,499,1.591,594,1.907,595,2.387,596,2.387,597,2.387,598,3.519,599,3.345,600,5.312,601,1.591,602,5.29,603,2.387,604,2.387,605,2.387,606,2.387,607,3.345,608,2.387,609,3.345,610,2.387,611,3.345,612,3.345,613,3.345,614,5.098,615,2.387,616,2.387,617,2.387,618,2.387,619,2.387,620,2.387,621,2.387,622,2.387,623,2.387,624,2.387,625,2.387,626,2.387,627,2.387,628,2.387,629,3.345,630,2.387]],["title/dependencies.html",[198,1.578,587,1.515]],["body/dependencies.html",[40,0.057,58,1.183,59,0.827,75,0.967,76,1.729,77,1.729,192,0.037,193,0.046,194,0.037,198,1.729,211,2.657,216,1.297,255,2.36,261,2.009,263,1.729,631,3.541,632,5.249,633,3.541,634,3.541,635,3.541,636,3.541,637,3.541,638,3.541,639,3.541,640,3.541,641,3.541,642,3.541,643,3.541,644,3.541,645,3.541,646,3.541,647,3.541,648,3.541,649,3.541,650,3.541,651,3.541,652,3.541,653,2.829,654,3.541,655,3.541,656,3.541]],["title/miscellaneous/enumerations.html",[657,1.29,658,2.581]],["body/miscellaneous/enumerations.html",[19,1.035,40,0.055,48,2.187,59,0.886,62,2.205,125,1.908,126,1.908,127,1.908,192,0.04,193,0.047,194,0.04,277,1.851,278,2.151,279,2.356,313,3.01,314,3.01,315,3.01,316,3.01,657,2.151,658,3.029,659,4.517]],["title/miscellaneous/functions.html",[657,1.29,660,2.581]],["body/miscellaneous/functions.html",[13,2.802,19,1.095,40,0.053,51,1.275,52,1.959,192,0.042,193,0.049,194,0.042,598,3.204,601,3.291,657,2.276,660,3.204,661,4.67,662,4.012]],["title/index.html",[19,0.621,477,1.515,478,1.29]],["body/index.html",[0,1.874,9,0.327,12,1.582,13,1.972,15,1.582,17,1.582,20,0.967,21,0.725,26,0.725,31,1.659,32,1.659,33,1.123,34,0.967,36,1.297,40,0.057,43,1.07,44,1.582,49,0.967,51,1.17,55,1.319,57,1.235,58,1.048,59,1.191,60,0.967,74,1.21,75,0.798,76,1.999,77,2.164,78,0.683,79,0.394,87,1.582,88,1.582,89,1.582,92,1.582,93,1.582,94,1.582,97,2.777,98,1.582,99,1.582,100,1.582,101,1.582,102,1.319,103,1.582,104,1.582,105,0.725,106,1.582,107,1.948,108,1.582,109,2.777,110,2.335,111,1.972,112,2.953,117,1.582,125,1.235,126,1.235,127,1.235,192,0.021,193,0.031,194,0.021,216,0.725,257,0.967,258,0.926,259,0.967,260,2.177,261,1.123,262,1.319,263,0.967,264,1.319,265,1.428,266,1.319,267,0.967,268,0.967,269,1.319,270,1.319,271,1.319,272,1.319,273,0.725,274,1.659,275,1.319,279,0.967,280,0.725,304,0.725,317,1.972,318,1.659,320,1.948,332,1.948,368,1.948,441,1.582,478,1.123,483,2.777,496,1.582,506,1.582,511,1.582,512,1.582,513,1.582,523,3.423,542,2.335,543,2.335,549,1.582,554,1.582,576,1.582,587,1.948,592,3.541,593,1.123,601,2.855,653,1.582,663,1.98,664,1.98,665,2.777,666,1.98,667,1.98,668,1.98,669,1.98,670,1.98,671,3.838,672,1.98,673,2.924,674,1.98,675,1.98,676,1.98,677,2.924,678,1.98,679,1.98,680,1.98,681,1.98,682,1.98,683,2.924,684,2.924,685,2.924,686,3.838,687,1.98,688,1.98,689,2.924,690,1.98,691,2.924,692,1.98,693,1.98,694,1.98,695,1.98,696,1.98,697,1.98,698,2.924,699,1.98,700,1.98,701,1.582,702,1.98,703,1.98,704,1.98,705,1.98,706,1.98,707,2.335,708,1.98,709,1.98,710,1.98,711,1.98,712,1.98,713,1.98,714,1.98,715,2.924,716,1.98,717,1.98,718,1.98,719,2.924,720,1.98,721,1.98,722,1.98,723,1.98,724,1.98,725,1.98,726,1.98,727,2.924,728,3.476,729,1.98,730,1.98,731,2.924,732,1.98,733,1.98,734,1.98,735,1.98,736,1.98,737,1.98,738,3.476,739,1.98,740,1.98,741,1.98,742,1.98,743,1.98,744,2.924,745,1.98,746,1.98,747,1.98,748,1.98,749,1.98,750,1.582]],["title/license.html",[477,1.515,478,1.29,593,1.29]],["body/license.html",[40,0.044,192,0.035,193,0.044,194,0.035,208,1.619,263,1.619,290,1.881,327,2.209,328,2.209,499,2.209,593,1.881,665,3.324,701,2.648,707,2.648,750,2.648,751,4.547,752,3.315,753,3.315,754,3.315,755,4.161,756,3.315,757,3.315,758,3.315,759,3.315,760,3.315,761,3.315,762,4.161,763,5.191,764,3.315,765,3.315,766,4.547,767,3.315,768,4.161,769,3.315,770,3.315,771,3.315,772,3.315,773,3.315,774,3.315,775,3.315,776,3.315,777,3.315,778,4.161,779,3.315,780,3.315,781,3.315,782,3.315,783,3.315,784,3.315,785,4.161,786,4.161,787,3.315,788,3.315,789,3.315,790,3.315,791,3.315,792,3.315,793,3.315,794,3.315,795,3.315,796,3.315,797,3.315,798,3.315,799,3.315,800,3.315,801,3.315,802,3.315,803,3.315,804,3.315,805,3.315,806,3.315,807,3.315,808,3.315,809,3.315,810,3.315,811,3.315,812,3.315,813,3.315,814,3.315]],["title/modules.html",[197,1.776]],["body/modules.html",[40,0.05,58,1.289,192,0.043,193,0.05,194,0.043,196,1.728,197,1.997,249,1.997,815,4.723,816,4.723,817,4.723]],["title/overview.html",[818,2.905]],["body/overview.html",[0,1.764,1,1.928,40,0.054,124,2.049,177,2.307,184,2.049,192,0.038,193,0.046,194,0.038,195,1.764,196,2.209,197,1.764,198,1.764,199,2.407,200,2.049,201,2.049,202,2.407,203,2.885,204,2.885,205,2.885,206,2.307,207,2.923,208,1.764,224,2.407,249,2.459,250,2.885,276,2.407,311,1.764,417,2.049,818,2.885,819,4.725]]],"invertedIndex":[["",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":372,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"coverage.html":{}}}],["0.10.3",{"_index":656,"title":{},"body":{"dependencies.html":{}}}],["0.6",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["0/1",{"_index":600,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":606,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":607,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":597,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":626,"title":{},"body":{"coverage.html":{}}}],["08/11/2016",{"_index":437,"title":{},"body":{"classes/ReTree.html":{}}}],["1",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"overview.html":{}}}],["1.1.20150312",{"_index":640,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":620,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":628,"title":{},"body":{"coverage.html":{}}}],["10.0.2",{"_index":638,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["100px",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["10px",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["11.0.2",{"_index":632,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":347,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["2",{"_index":819,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":650,"title":{},"body":{"dependencies.html":{}}}],["2.0.5",{"_index":646,"title":{},"body":{"dependencies.html":{}}}],["2.1.1",{"_index":644,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":654,"title":{},"body":{"dependencies.html":{}}}],["2021",{"_index":753,"title":{},"body":{"license.html":{}}}],["20px",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["25",{"_index":627,"title":{},"body":{"coverage.html":{}}}],["4.15.2",{"_index":645,"title":{},"body":{"dependencies.html":{}}}],["40px",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["4px",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["5",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["6",{"_index":663,"title":{},"body":{"index.html":{}}}],["6.5.5",{"_index":648,"title":{},"body":{"dependencies.html":{}}}],["600px",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["9.x",{"_index":733,"title":{},"body":{"index.html":{}}}],["__buttons",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["__input",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["__non_webpack_require__",{"_index":603,"title":{},"body":{"coverage.html":{}}}],["above",{"_index":784,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["accessible",{"_index":335,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["accessors",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["action",{"_index":808,"title":{},"body":{"license.html":{}}}],["active",{"_index":552,"title":{},"body":{"contributing.html":{}}}],["actual",{"_index":365,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["actual_component",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["add",{"_index":578,"title":{},"body":{"contributing.html":{}}}],["agains",{"_index":546,"title":{},"body":{"contributing.html":{}}}],["agent",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["ahsan",{"_index":327,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"license.html":{}}}],["ahsanayaz",{"_index":436,"title":{},"body":{"classes/ReTree.html":{}}}],["align",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["already",{"_index":529,"title":{},"body":{"contributing.html":{}}}],["amazing",{"_index":742,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":776,"title":{},"body":{"license.html":{}}}],["android",{"_index":368,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"index.html":{}}}],["angular",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":631,"title":{},"body":{"dependencies.html":{}}}],["angular/cli",{"_index":715,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/compiler",{"_index":633,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"injectables/UniversalDeviceDetectorService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":634,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"dependencies.html":{}}}],["angular/router",{"_index":636,"title":{},"body":{"dependencies.html":{}}}],["angular2",{"_index":744,"title":{},"body":{"index.html":{}}}],["animations",{"_index":652,"title":{},"body":{"dependencies.html":{}}}],["aot",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["app.component",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.module",{"_index":256,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["app.server.module.ts",{"_index":699,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"coverage.html":{},"overview.html":{}}}],["appid",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["apply",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["applydevice",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["applydevice(useragent",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["appmodule",{"_index":196,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":223,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["appropriate",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["appservermodule",{"_index":249,"title":{"modules/AppServerModule.html":{}},"body":{"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"modules.html":{},"overview.html":{}}}],["arising",{"_index":812,"title":{},"body":{"license.html":{}}}],["array.isarray(regex",{"_index":457,"title":{},"body":{"classes/ReTree.html":{}}}],["array.isarray(regex.and",{"_index":450,"title":{},"body":{"classes/ReTree.html":{}}}],["array.isarray(regex.or",{"_index":453,"title":{},"body":{"classes/ReTree.html":{}}}],["ask",{"_index":535,"title":{},"body":{"contributing.html":{}}}],["assigned",{"_index":557,"title":{},"body":{"contributing.html":{}}}],["associated",{"_index":764,"title":{},"body":{"license.html":{}}}],["author",{"_index":326,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"contributing.html":{}}}],["authors",{"_index":802,"title":{},"body":{"license.html":{}}}],["available",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["ayaz",{"_index":328,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"license.html":{}}}],["back",{"_index":588,"title":{},"body":{"contributing.html":{}}}],["badges",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["based",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["before",{"_index":538,"title":{},"body":{"contributing.html":{}}}],["block",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["boilerplate",{"_index":746,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["bootstrap",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"overview.html":{}}}],["branch",{"_index":548,"title":{},"body":{"contributing.html":{}}}],["browse",{"_index":817,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser.get",{"_index":241,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["browser_version",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["browser_versions_re",{"_index":615,"title":{},"body":{"coverage.html":{}}}],["browser_versions_re_map",{"_index":616,"title":{},"body":{"coverage.html":{}}}],["browsermodule",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule.withservertransition",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["browsers",{"_index":339,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"coverage.html":{}}}],["browsers_re",{"_index":617,"title":{},"body":{"coverage.html":{}}}],["bug",{"_index":503,"title":{},"body":{"contributing.html":{}}}],["bugs",{"_index":491,"title":{},"body":{"contributing.html":{}}}],["build",{"_index":713,"title":{},"body":{"index.html":{}}}],["buildrun",{"_index":714,"title":{},"body":{"index.html":{}}}],["button",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["c",{"_index":752,"title":{},"body":{"license.html":{}}}],["catch",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["cd",{"_index":718,"title":{},"body":{"index.html":{}}}],["center",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["change",{"_index":723,"title":{},"body":{"index.html":{}}}],["change_log.md",{"_index":725,"title":{},"body":{"index.html":{}}}],["changelog",{"_index":642,"title":{},"body":{"dependencies.html":{}}}],["changelog.md",{"_index":573,"title":{},"body":{"contributing.html":{}}}],["changes",{"_index":576,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["charge",{"_index":759,"title":{},"body":{"license.html":{}}}],["check",{"_index":399,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["child",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["ci",{"_index":551,"title":{},"body":{"contributing.html":{}}}],["claim",{"_index":805,"title":{},"body":{"license.html":{}}}],["class",{"_index":79,"title":{"classes/AppPage.html":{},"classes/ReTree.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":224,"title":{},"body":{"classes/AppPage.html":{},"classes/ReTree.html":{},"overview.html":{}}}],["classlist.js",{"_index":639,"title":{},"body":{"dependencies.html":{}}}],["cli",{"_index":643,"title":{},"body":{"dependencies.html":{}}}],["close",{"_index":487,"title":{},"body":{"contributing.html":{}}}],["cluster_appmodule",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appservermodule",{"_index":250,"title":{},"body":{"modules/AppServerModule.html":{},"overview.html":{}}}],["cluster_appservermodule_bootstrap",{"_index":252,"title":{},"body":{"modules/AppServerModule.html":{}}}],["cluster_appservermodule_imports",{"_index":251,"title":{},"body":{"modules/AppServerModule.html":{}}}],["column",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["comment",{"_index":563,"title":{},"body":{"contributing.html":{}}}],["commonmodule",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["community",{"_index":589,"title":{},"body":{"contributing.html":{}}}],["compares",{"_index":398,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["compatibility",{"_index":729,"title":{},"body":{"index.html":{}}}],["compatible",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_template",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{}}}],["conditions",{"_index":783,"title":{},"body":{"license.html":{}}}],["connection",{"_index":813,"title":{},"body":{"license.html":{}}}],["console.log('hello",{"_index":680,"title":{},"body":{"index.html":{}}}],["console.log('ua",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(isdesktopdevice",{"_index":688,"title":{},"body":{"index.html":{}}}],["console.log(ismobile",{"_index":682,"title":{},"body":{"index.html":{}}}],["console.log(istablet",{"_index":687,"title":{},"body":{"index.html":{}}}],["console.log(this.deviceinfo",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["const",{"_index":317,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"index.html":{}}}],["constants",{"_index":309,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants.browser_versions_re[this.browser",{"_index":376,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants.browsers.unknown",{"_index":374,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants.devices.chrome_book",{"_index":412,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants.devices.ps4",{"_index":411,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants.devices.unknown",{"_index":413,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants.general.uknown",{"_index":386,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants.mobiles_re[mobile",{"_index":405,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants.tablets_re[ipad",{"_index":349,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants.tablets_re[mobile",{"_index":409,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants[`${mapping.const}_re`][item",{"_index":355,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants[mapping.const].android",{"_index":364,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants[mapping.const].unknown",{"_index":370,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants[mapping.const][item",{"_index":344,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants[mapping.const][key",{"_index":359,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constructor",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["constructor(@inject(platform_id",{"_index":267,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["constructor(deviceservice",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(platformid",{"_index":283,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["constructor(private",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["consuming",{"_index":730,"title":{},"body":{"index.html":{}}}],["container",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["content",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["context",{"_index":612,"title":{},"body":{"coverage.html":{}}}],["contract",{"_index":809,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":480,"title":{},"body":{"contributing.html":{}}}],["contributing",{"_index":479,"title":{"contributing.html":{}},"body":{}}],["conventional",{"_index":641,"title":{},"body":{"dependencies.html":{}}}],["copies",{"_index":778,"title":{},"body":{"license.html":{}}}],["copy",{"_index":762,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":751,"title":{},"body":{"license.html":{}}}],["correct",{"_index":692,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":594,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":484,"title":{},"body":{"contributing.html":{}}}],["created",{"_index":435,"title":{},"body":{"classes/ReTree.html":{}}}],["creator",{"_index":745,"title":{},"body":{"index.html":{}}}],["credits",{"_index":736,"title":{},"body":{"index.html":{}}}],["current",{"_index":291,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["currentvalue",{"_index":361,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["cursor",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["d.ts",{"_index":706,"title":{},"body":{"index.html":{}}}],["damages",{"_index":806,"title":{},"body":{"license.html":{}}}],["deal",{"_index":765,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":814,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["default",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"pipes/KeysPipe.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["defined",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DeviceDetectorService.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["demo",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"index.html":{}}}],["demoapp",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["dependencies",{"_index":198,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deprecated",{"_index":664,"title":{},"body":{"index.html":{}}}],["desc",{"_index":329,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["description",{"_index":434,"title":{},"body":{"classes/ReTree.html":{}}}],["desktop",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["desktopdevices",{"_index":410,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["desktopdevices.indexof(this.device",{"_index":415,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["details",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"contributing.html":{}}}],["detection",{"_index":693,"title":{},"body":{"index.html":{}}}],["detector",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"dependencies.html":{},"index.html":{}}}],["detector.constants",{"_index":310,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["detector.constants.ts",{"_index":614,"title":{},"body":{"coverage.html":{}}}],["detector.service.ts",{"_index":279,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["detector.service.ts:135",{"_index":285,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:155",{"_index":293,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:171",{"_index":295,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:191",{"_index":288,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:37",{"_index":306,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:38",{"_index":307,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:39",{"_index":302,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:40",{"_index":298,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:41",{"_index":300,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:42",{"_index":303,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:43",{"_index":299,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:44",{"_index":305,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:45",{"_index":301,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:46",{"_index":284,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:59",{"_index":297,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector/src/lib/device",{"_index":278,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["detector/src/lib/retree.ts",{"_index":433,"title":{},"body":{"classes/ReTree.html":{},"coverage.html":{}}}],["detector/src/lib/retree.ts:30",{"_index":442,"title":{},"body":{"classes/ReTree.html":{}}}],["detector/src/lib/retree.ts:5",{"_index":439,"title":{},"body":{"classes/ReTree.html":{}}}],["detector/src/lib/retree.ts:8",{"_index":445,"title":{},"body":{"classes/ReTree.html":{}}}],["detector/src/test.ts",{"_index":629,"title":{},"body":{"coverage.html":{}}}],["developers",{"_index":524,"title":{},"body":{"contributing.html":{}}}],["development",{"_index":703,"title":{},"body":{"index.html":{}}}],["device",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["devicedetectorservice",{"_index":36,"title":{"injectables/DeviceDetectorService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"coverage.html":{},"index.html":{}}}],["devicedetectorservice:135",{"_index":462,"title":{},"body":{"injectables/UniversalDeviceDetectorService.html":{}}}],["devicedetectorservice:155",{"_index":464,"title":{},"body":{"injectables/UniversalDeviceDetectorService.html":{}}}],["devicedetectorservice:171",{"_index":465,"title":{},"body":{"injectables/UniversalDeviceDetectorService.html":{}}}],["devicedetectorservice:191",{"_index":463,"title":{},"body":{"injectables/UniversalDeviceDetectorService.html":{}}}],["devicedetectorservice:37",{"_index":475,"title":{},"body":{"injectables/UniversalDeviceDetectorService.html":{}}}],["devicedetectorservice:38",{"_index":476,"title":{},"body":{"injectables/UniversalDeviceDetectorService.html":{}}}],["devicedetectorservice:39",{"_index":472,"title":{},"body":{"injectables/UniversalDeviceDetectorService.html":{}}}],["devicedetectorservice:40",{"_index":467,"title":{},"body":{"injectables/UniversalDeviceDetectorService.html":{}}}],["devicedetectorservice:41",{"_index":469,"title":{},"body":{"injectables/UniversalDeviceDetectorService.html":{}}}],["devicedetectorservice:42",{"_index":473,"title":{},"body":{"injectables/UniversalDeviceDetectorService.html":{}}}],["devicedetectorservice:43",{"_index":468,"title":{},"body":{"injectables/UniversalDeviceDetectorService.html":{}}}],["devicedetectorservice:44",{"_index":474,"title":{},"body":{"injectables/UniversalDeviceDetectorService.html":{}}}],["devicedetectorservice:45",{"_index":470,"title":{},"body":{"injectables/UniversalDeviceDetectorService.html":{}}}],["devicedetectorservice:46",{"_index":471,"title":{},"body":{"injectables/UniversalDeviceDetectorService.html":{}}}],["devicedetectorservice:59",{"_index":466,"title":{},"body":{"injectables/UniversalDeviceDetectorService.html":{}}}],["deviceinfo",{"_index":21,"title":{"interfaces/DeviceInfo.html":{}},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"coverage.html":{},"index.html":{}}}],["devices",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"coverage.html":{}}}],["devices_re",{"_index":618,"title":{},"body":{"coverage.html":{}}}],["deviceservice",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["devicetype",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"miscellaneous/enumerations.html":{}}}],["devicetype.desktop",{"_index":393,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["devicetype.mobile",{"_index":391,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["devicetype.tablet",{"_index":389,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["devicetype.unknown",{"_index":394,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["devs",{"_index":568,"title":{},"body":{"contributing.html":{}}}],["different",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["direction",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["directive",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["directives",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["display",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["distribute",{"_index":774,"title":{},"body":{"license.html":{}}}],["docs",{"_index":542,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["docs/readme",{"_index":516,"title":{},"body":{"contributing.html":{}}}],["documentation",{"_index":499,"title":{},"body":{"contributing.html":{},"coverage.html":{},"license.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{}}}],["don't",{"_index":533,"title":{},"body":{"contributing.html":{}}}],["done",{"_index":734,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":635,"title":{},"body":{"dependencies.html":{}}}],["earlier",{"_index":667,"title":{},"body":{"index.html":{}}}],["element",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{}}}],["element(by.css('app",{"_index":242,"title":{},"body":{"classes/AppPage.html":{}}}],["element.all(by.css('app",{"_index":245,"title":{},"body":{"classes/AppPage.html":{}}}],["elementarrayfinder",{"_index":233,"title":{},"body":{"classes/AppPage.html":{}}}],["end",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["engine",{"_index":637,"title":{},"body":{"dependencies.html":{}}}],["engine/tokens",{"_index":262,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["enhance",{"_index":489,"title":{},"body":{"contributing.html":{}}}],["ensure",{"_index":690,"title":{},"body":{"index.html":{}}}],["enum",{"_index":312,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["enumerations",{"_index":658,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":609,"title":{},"body":{"coverage.html":{}}}],["epicfunction",{"_index":679,"title":{},"body":{"index.html":{}}}],["etc",{"_index":686,"title":{},"body":{"index.html":{}}}],["event",{"_index":801,"title":{},"body":{"license.html":{}}}],["example",{"_index":698,"title":{},"body":{"index.html":{}}}],["examples",{"_index":498,"title":{},"body":{"contributing.html":{}}}],["exec",{"_index":438,"title":{},"body":{"classes/ReTree.html":{}}}],["exec(str",{"_index":440,"title":{},"body":{"classes/ReTree.html":{}}}],["existing",{"_index":527,"title":{},"body":{"contributing.html":{}}}],["explain",{"_index":520,"title":{},"body":{"contributing.html":{}}}],["export",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["exports",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["express",{"_index":263,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"dependencies.html":{},"index.html":{},"license.html":{}}}],["express.express",{"_index":662,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expressjs",{"_index":697,"title":{},"body":{"index.html":{}}}],["extends",{"_index":266,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["fa",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["false",{"_index":400,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"classes/ReTree.html":{}}}],["far",{"_index":519,"title":{},"body":{"contributing.html":{}}}],["fast",{"_index":747,"title":{},"body":{"index.html":{}}}],["feature",{"_index":507,"title":{},"body":{"contributing.html":{}}}],["feedback",{"_index":504,"title":{},"body":{"contributing.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{},"contributing.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":707,"title":{},"body":{"index.html":{},"license.html":{}}}],["finally",{"_index":581,"title":{},"body":{"contributing.html":{}}}],["first",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"contributing.html":{}}}],["fitness",{"_index":797,"title":{},"body":{"license.html":{}}}],["fix",{"_index":490,"title":{},"body":{"contributing.html":{}}}],["flex",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["following",{"_index":701,"title":{},"body":{"index.html":{},"license.html":{}}}],["font",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["fork",{"_index":488,"title":{},"body":{"contributing.html":{}}}],["found",{"_index":366,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"contributing.html":{}}}],["free",{"_index":758,"title":{},"body":{"license.html":{}}}],["function",{"_index":599,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":660,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":781,"title":{},"body":{"license.html":{}}}],["g",{"_index":717,"title":{},"body":{"index.html":{}}}],["general",{"_index":619,"title":{},"body":{"coverage.html":{}}}],["generate",{"_index":704,"title":{},"body":{"index.html":{}}}],["generator",{"_index":749,"title":{},"body":{"index.html":{}}}],["getdemoheadingtext",{"_index":226,"title":{},"body":{"classes/AppPage.html":{}}}],["getdeviceinfo",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["getdeviceinfoelements",{"_index":227,"title":{},"body":{"classes/AppPage.html":{}}}],["getisdesktop",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["getismobile",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["getistablet",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["getparagraphtext",{"_index":228,"title":{},"body":{"classes/AppPage.html":{}}}],["getting",{"_index":477,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{}}],["github",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["go",{"_index":525,"title":{},"body":{"contributing.html":{}}}],["going",{"_index":565,"title":{},"body":{"contributing.html":{}}}],["good",{"_index":560,"title":{},"body":{"contributing.html":{}}}],["granted",{"_index":757,"title":{},"body":{"license.html":{}}}],["h1')).gettext",{"_index":248,"title":{},"body":{"classes/AppPage.html":{}}}],["hack",{"_index":345,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["hasn't",{"_index":528,"title":{},"body":{"contributing.html":{}}}],["heading",{"_index":243,"title":{},"body":{"classes/AppPage.html":{}}}],["help",{"_index":486,"title":{},"body":{"contributing.html":{}}}],["helper",{"_index":702,"title":{},"body":{"index.html":{}}}],["helping",{"_index":532,"title":{},"body":{"contributing.html":{}}}],["helps",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"contributing.html":{},"index.html":{}}}],["here",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"contributing.html":{}}}],["hereby",{"_index":756,"title":{},"body":{"license.html":{}}}],["holders",{"_index":803,"title":{},"body":{"license.html":{}}}],["holds",{"_index":700,"title":{},"body":{"index.html":{}}}],["home",{"_index":673,"title":{},"body":{"index.html":{}}}],["home.component.html",{"_index":675,"title":{},"body":{"index.html":{}}}],["home.component.scss",{"_index":674,"title":{},"body":{"index.html":{}}}],["homecomponent",{"_index":676,"title":{},"body":{"index.html":{}}}],["host",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["hover",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["html",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["http",{"_index":677,"title":{},"body":{"index.html":{}}}],["i.e",{"_index":748,"title":{},"body":{"index.html":{}}}],["icon",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["idea",{"_index":561,"title":{},"body":{"contributing.html":{}}}],["identifier",{"_index":595,"title":{},"body":{"coverage.html":{}}}],["identify",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["ie10",{"_index":727,"title":{},"body":{"index.html":{}}}],["ie11",{"_index":728,"title":{},"body":{"index.html":{}}}],["img",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["implement",{"_index":541,"title":{},"body":{"contributing.html":{}}}],["implements",{"_index":425,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["implied",{"_index":793,"title":{},"body":{"license.html":{}}}],["import",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["important",{"_index":521,"title":{},"body":{"contributing.html":{}}}],["imports",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["improve",{"_index":497,"title":{},"body":{"contributing.html":{}}}],["improves",{"_index":522,"title":{},"body":{"contributing.html":{}}}],["included",{"_index":787,"title":{},"body":{"license.html":{}}}],["including",{"_index":768,"title":{},"body":{"license.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["info.key",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["info.value",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["information",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"contributing.html":{},"index.html":{}}}],["inherited",{"_index":461,"title":{},"body":{"injectables/UniversalDeviceDetectorService.html":{}}}],["initial",{"_index":331,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["initiated",{"_index":333,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["inject",{"_index":257,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["inject(request",{"_index":269,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["injectable",{"_index":258,"title":{"injectables/DeviceDetectorService.html":{},"injectables/UniversalDeviceDetectorService.html":{}},"body":{"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"coverage.html":{},"index.html":{}}}],["injectables",{"_index":276,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"injectables/UniversalDeviceDetectorService.html":{},"overview.html":{}}}],["input",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["inspired",{"_index":737,"title":{},"body":{"index.html":{}}}],["install",{"_index":671,"title":{},"body":{"index.html":{}}}],["installation",{"_index":670,"title":{},"body":{"index.html":{}}}],["installed",{"_index":716,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":447,"title":{},"body":{"classes/ReTree.html":{}}}],["instead",{"_index":367,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["interface",{"_index":311,"title":{"interfaces/DeviceInfo.html":{}},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":416,"title":{},"body":{"interfaces/DeviceInfo.html":{}}}],["ios",{"_index":346,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["ipad",{"_index":318,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"coverage.html":{},"index.html":{}}}],["iphone",{"_index":683,"title":{},"body":{"index.html":{}}}],["isdesktop",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["isdesktop(useragent",{"_index":287,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["isdesktopdevice",{"_index":681,"title":{},"body":{"index.html":{}}}],["ismobile",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["ismobile(useragent",{"_index":292,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["isplatformbrowser",{"_index":308,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["isplatformbrowser(this.platformid",{"_index":321,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["isplatformserver",{"_index":264,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["isplatformserver(platformid",{"_index":271,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["issue",{"_index":509,"title":{},"body":{"contributing.html":{}}}],["issues",{"_index":485,"title":{},"body":{"contributing.html":{}}}],["istablet",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["istablet(useragent",{"_index":294,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["it's",{"_index":559,"title":{},"body":{"contributing.html":{}}}],["item",{"_index":247,"title":{},"body":{"classes/AppPage.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"classes/ReTree.html":{}}}],["js",{"_index":653,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["js.map",{"_index":705,"title":{},"body":{"index.html":{}}}],["justify",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["key",{"_index":428,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["keys",{"_index":420,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["keys.push",{"_index":430,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["keyspipe",{"_index":206,"title":{"pipes/KeysPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/KeysPipe.html":{},"coverage.html":{},"overview.html":{}}}],["kind",{"_index":792,"title":{},"body":{"license.html":{}}}],["landscape",{"_index":316,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"miscellaneous/enumerations.html":{}}}],["landscape)').matches",{"_index":383,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["later",{"_index":334,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["latest",{"_index":577,"title":{},"body":{"contributing.html":{}}}],["leave",{"_index":562,"title":{},"body":{"contributing.html":{}}}],["left",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["legend",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["liability",{"_index":807,"title":{},"body":{"license.html":{}}}],["liable",{"_index":804,"title":{},"body":{"license.html":{}}}],["library",{"_index":523,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["license",{"_index":593,"title":{"license.html":{}},"body":{"contributing.html":{},"index.html":{},"license.html":{}}}],["limitation",{"_index":769,"title":{},"body":{"license.html":{}}}],["limited",{"_index":794,"title":{},"body":{"license.html":{}}}],["links",{"_index":591,"title":{},"body":{"contributing.html":{}}}],["lint",{"_index":709,"title":{},"body":{"index.html":{}}}],["lintto",{"_index":711,"title":{},"body":{"index.html":{}}}],["live",{"_index":668,"title":{},"body":{"index.html":{}}}],["localhost:4200",{"_index":722,"title":{},"body":{"index.html":{}}}],["lock",{"_index":508,"title":{},"body":{"contributing.html":{}}}],["log",{"_index":724,"title":{},"body":{"index.html":{}}}],["logo",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["lot",{"_index":584,"title":{},"body":{"contributing.html":{}}}],["macintel",{"_index":351,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["mainmodule",{"_index":604,"title":{},"body":{"coverage.html":{}}}],["make",{"_index":511,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["manually",{"_index":696,"title":{},"body":{"index.html":{}}}],["many",{"_index":481,"title":{},"body":{"contributing.html":{}}}],["map(key",{"_index":358,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["mapping.prop",{"_index":362,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["mappings",{"_index":337,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["mappings.foreach(mapping",{"_index":341,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["margin",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["master",{"_index":547,"title":{},"body":{"contributing.html":{}}}],["match",{"_index":402,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["matching",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["max",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["means",{"_index":583,"title":{},"body":{"contributing.html":{}}}],["merchantability",{"_index":796,"title":{},"body":{"license.html":{}}}],["merge",{"_index":772,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"pipes/KeysPipe.html":{}}}],["methods",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DeviceDetectorService.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["miscellaneous",{"_index":657,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":750,"title":{},"body":{"index.html":{},"license.html":{}}}],["mobile",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["mobiles_re",{"_index":621,"title":{},"body":{"coverage.html":{}}}],["modify",{"_index":771,"title":{},"body":{"license.html":{}}}],["module",{"_index":195,"title":{"modules/AppModule.html":{},"modules/AppServerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["modulefilename",{"_index":605,"title":{},"body":{"coverage.html":{}}}],["modules",{"_index":197,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":537,"title":{},"body":{"contributing.html":{}}}],["muhammad",{"_index":754,"title":{},"body":{"license.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["navigateto",{"_index":229,"title":{},"body":{"classes/AppPage.html":{}}}],["navigator",{"_index":406,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["navigator.maxtouchpoints",{"_index":352,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["navigator.platform",{"_index":350,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["need",{"_index":695,"title":{},"body":{"index.html":{}}}],["needed",{"_index":580,"title":{},"body":{"contributing.html":{}}}],["needs",{"_index":743,"title":{},"body":{"index.html":{}}}],["new",{"_index":304,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{},"contributing.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":719,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["nguniversal/express",{"_index":261,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"dependencies.html":{},"index.html":{}}}],["ngx",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"dependencies.html":{},"index.html":{}}}],["nofilter",{"_index":426,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["noninfringement",{"_index":800,"title":{},"body":{"license.html":{}}}],["noopanimationsmodule",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["notice",{"_index":785,"title":{},"body":{"license.html":{}}}],["npm",{"_index":592,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["null",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"classes/ReTree.html":{},"index.html":{}}}],["obj",{"_index":356,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["obj[constants[mapping.const][item",{"_index":353,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["object",{"_index":286,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["object.keys(constants.mobiles_re).find(mobile",{"_index":403,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["object.keys(constants.tablets_re).find(mobile",{"_index":408,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["object.keys(constants[mapping.const",{"_index":357,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["object.keys(constants[mapping.const]).reduce((obj",{"_index":343,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["obtaining",{"_index":761,"title":{},"body":{"license.html":{}}}],["one",{"_index":556,"title":{},"body":{"contributing.html":{}}}],["opacity",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["open",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"contributing.html":{}}}],["opened",{"_index":530,"title":{},"body":{"contributing.html":{}}}],["optional",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["orientation",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["orientationtype",{"_index":314,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"miscellaneous/enumerations.html":{}}}],["orientationtype.landscape",{"_index":384,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["orientationtype.portrait",{"_index":385,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["os",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"coverage.html":{},"index.html":{}}}],["os_re",{"_index":622,"title":{},"body":{"coverage.html":{}}}],["os_version",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["os_versions",{"_index":340,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"coverage.html":{}}}],["os_versions_re",{"_index":623,"title":{},"body":{"coverage.html":{}}}],["os_versions_re_map",{"_index":624,"title":{},"body":{"coverage.html":{}}}],["others",{"_index":502,"title":{},"body":{"contributing.html":{}}}],["otherwise",{"_index":811,"title":{},"body":{"license.html":{}}}],["out",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"contributing.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":818,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":587,"title":{"dependencies.html":{}},"body":{"contributing.html":{},"index.html":{}}}],["padding",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["page",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"contributing.html":{}}}],["parameters",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["particular",{"_index":798,"title":{},"body":{"license.html":{}}}],["pass",{"_index":550,"title":{},"body":{"contributing.html":{}}}],["paste",{"_index":121,"title":{},"body":{"components/AppComponent.html":{}}}],["permission",{"_index":755,"title":{},"body":{"license.html":{}}}],["permit",{"_index":779,"title":{},"body":{"license.html":{}}}],["person",{"_index":760,"title":{},"body":{"license.html":{}}}],["persons",{"_index":780,"title":{},"body":{"license.html":{}}}],["phone",{"_index":685,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":417,"title":{"pipes/KeysPipe.html":{}},"body":{"pipes/KeysPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipes",{"_index":418,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["pipes/keys.pipe",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["pipetransform",{"_index":424,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["planning",{"_index":531,"title":{},"body":{"contributing.html":{}}}],["platform_id",{"_index":259,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["platformid",{"_index":268,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["please",{"_index":543,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["pointer",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["polyfills.ts",{"_index":732,"title":{},"body":{"index.html":{}}}],["portions",{"_index":789,"title":{},"body":{"license.html":{}}}],["portrait",{"_index":315,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"miscellaneous/enumerations.html":{}}}],["position",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["powered",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["pr",{"_index":554,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["pr.pull",{"_index":540,"title":{},"body":{"contributing.html":{}}}],["previousvalue",{"_index":363,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["private",{"_index":320,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"index.html":{}}}],["processing",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["project",{"_index":483,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["projects/.../device",{"_index":659,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../server.ts",{"_index":661,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/demo/e2e/src/app.po.ts",{"_index":225,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["projects/demo/e2e/src/app.po.ts:13",{"_index":232,"title":{},"body":{"classes/AppPage.html":{}}}],["projects/demo/e2e/src/app.po.ts:17",{"_index":234,"title":{},"body":{"classes/AppPage.html":{}}}],["projects/demo/e2e/src/app.po.ts:5",{"_index":235,"title":{},"body":{"classes/AppPage.html":{}}}],["projects/demo/e2e/src/app.po.ts:9",{"_index":230,"title":{},"body":{"classes/AppPage.html":{}}}],["projects/demo/server.ts",{"_index":598,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/demo/src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["projects/demo/src/app/app.component.ts:10",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:11",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:12",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:13",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:23",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:28",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:32",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:36",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:40",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:45",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:9",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.module.ts",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["projects/demo/src/app/pipes/keys.pipe.ts",{"_index":419,"title":{},"body":{"pipes/KeysPipe.html":{},"coverage.html":{}}}],["projects/demo/src/app/pipes/keys.pipe.ts:7",{"_index":423,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["projects/demo/src/app/server.ts",{"_index":253,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"coverage.html":{}}}],["projects/demo/src/app/server.ts:13",{"_index":460,"title":{},"body":{"injectables/UniversalDeviceDetectorService.html":{}}}],["projects/demo/src/environments/environment.prod.ts",{"_index":608,"title":{},"body":{"coverage.html":{}}}],["projects/demo/src/environments/environment.ts",{"_index":610,"title":{},"body":{"coverage.html":{}}}],["projects/demo/src/test.ts",{"_index":611,"title":{},"body":{"coverage.html":{}}}],["projects/ngx",{"_index":277,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"classes/ReTree.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["promise",{"_index":237,"title":{},"body":{"classes/AppPage.html":{}}}],["prop",{"_index":338,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["property",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["props",{"_index":422,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["props.indexof(key",{"_index":432,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["props.length",{"_index":427,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["propstoshow",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["protractor",{"_index":236,"title":{},"body":{"classes/AppPage.html":{}}}],["provide",{"_index":274,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"contributing.html":{},"index.html":{}}}],["provided",{"_index":790,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":319,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["providers",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"overview.html":{}}}],["prs",{"_index":545,"title":{},"body":{"contributing.html":{}}}],["public",{"_index":281,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["publish",{"_index":773,"title":{},"body":{"license.html":{}}}],["pull",{"_index":493,"title":{},"body":{"contributing.html":{}}}],["purpose",{"_index":799,"title":{},"body":{"license.html":{}}}],["questions",{"_index":536,"title":{},"body":{"contributing.html":{}}}],["re",{"_index":375,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["read",{"_index":515,"title":{},"body":{"contributing.html":{}}}],["really",{"_index":505,"title":{},"body":{"contributing.html":{}}}],["reduce((previousvalue",{"_index":360,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["refer",{"_index":731,"title":{},"body":{"index.html":{}}}],["regarding",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["regex",{"_index":441,"title":{},"body":{"classes/ReTree.html":{},"index.html":{}}}],["regex.and.every((item",{"_index":451,"title":{},"body":{"classes/ReTree.html":{}}}],["regex.exec(str",{"_index":456,"title":{},"body":{"classes/ReTree.html":{}}}],["regex.not",{"_index":455,"title":{},"body":{"classes/ReTree.html":{}}}],["regex.or.some((item",{"_index":454,"title":{},"body":{"classes/ReTree.html":{}}}],["regex.reduce((res",{"_index":458,"title":{},"body":{"classes/ReTree.html":{}}}],["regex.test(str",{"_index":449,"title":{},"body":{"classes/ReTree.html":{}}}],["regexp",{"_index":448,"title":{},"body":{"classes/ReTree.html":{}}}],["regexp(regex",{"_index":446,"title":{},"body":{"classes/ReTree.html":{}}}],["relative",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["relevant",{"_index":553,"title":{},"body":{"contributing.html":{}}}],["repo",{"_index":501,"title":{},"body":{"contributing.html":{}}}],["reporting",{"_index":514,"title":{},"body":{"contributing.html":{}}}],["reproduced",{"_index":517,"title":{},"body":{"contributing.html":{}}}],["request",{"_index":260,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"contributing.html":{},"index.html":{}}}],["requests",{"_index":494,"title":{},"body":{"contributing.html":{}}}],["require",{"_index":613,"title":{},"body":{"coverage.html":{}}}],["required",{"_index":571,"title":{},"body":{"contributing.html":{}}}],["res",{"_index":377,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"classes/ReTree.html":{}}}],["res[1",{"_index":379,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["reset",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["resetdeviceinfo",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["restriction",{"_index":767,"title":{},"body":{"license.html":{}}}],["result",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["retree",{"_index":280,"title":{"classes/ReTree.html":{}},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{},"coverage.html":{},"index.html":{}}}],["return",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{}}}],["returns",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["right",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["rights",{"_index":770,"title":{},"body":{"license.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["rotate(45deg",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":601,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["running",{"_index":689,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":647,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":569,"title":{},"body":{"contributing.html":{}}}],["savein",{"_index":672,"title":{},"body":{"index.html":{}}}],["section",{"_index":579,"title":{},"body":{"contributing.html":{}}}],["see",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["selenium",{"_index":239,"title":{},"body":{"classes/AppPage.html":{}}}],["sell",{"_index":777,"title":{},"body":{"license.html":{}}}],["send",{"_index":492,"title":{},"body":{"contributing.html":{}}}],["sending",{"_index":539,"title":{},"body":{"contributing.html":{}}}],["server",{"_index":255,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"dependencies.html":{}}}],["serverapp",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["servermodule",{"_index":254,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["servethe",{"_index":720,"title":{},"body":{"index.html":{}}}],["service",{"_index":332,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"index.html":{}}}],["setdeviceinfo",{"_index":282,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["setdeviceinfo(ua",{"_index":296,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["sets",{"_index":330,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["shall",{"_index":786,"title":{},"body":{"license.html":{}}}],["share",{"_index":500,"title":{},"body":{"contributing.html":{}}}],["shy",{"_index":534,"title":{},"body":{"contributing.html":{}}}],["size",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["small",{"_index":574,"title":{},"body":{"contributing.html":{}}}],["software",{"_index":763,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["ssr",{"_index":669,"title":{},"body":{"index.html":{}}}],["started",{"_index":478,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["statements",{"_index":596,"title":{},"body":{"coverage.html":{}}}],["stating",{"_index":564,"title":{},"body":{"contributing.html":{}}}],["str",{"_index":443,"title":{},"body":{"classes/ReTree.html":{}}}],["string",{"_index":273,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["subject",{"_index":782,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":775,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":788,"title":{},"body":{"license.html":{}}}],["summary",{"_index":575,"title":{},"body":{"contributing.html":{}}}],["super(platformid",{"_index":270,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["super.setdeviceinfo((request.headers['user",{"_index":272,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["support",{"_index":815,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":512,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["svg",{"_index":816,"title":{},"body":{"modules.html":{}}}],["table",{"_index":246,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":630,"title":{},"body":{"coverage.html":{}}}],["tablet",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["tablets_re",{"_index":625,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["test",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"classes/ReTree.html":{}}}],["test(str",{"_index":444,"title":{},"body":{"classes/ReTree.html":{}}}],["tests",{"_index":496,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["testto",{"_index":712,"title":{},"body":{"index.html":{}}}],["text",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["text')).gettext",{"_index":244,"title":{},"body":{"classes/AppPage.html":{}}}],["thank",{"_index":582,"title":{},"body":{"contributing.html":{}}}],["there's",{"_index":544,"title":{},"body":{"contributing.html":{}}}],["thing",{"_index":570,"title":{},"body":{"contributing.html":{}}}],["this.applydevice",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["this.browser",{"_index":373,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.browser_version",{"_index":371,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.device",{"_index":396,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.deviceinfo",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["this.deviceservice.getdeviceinfo",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["this.deviceservice.isdesktop",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["this.deviceservice.ismobile",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["this.deviceservice.istablet",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["this.deviceservice.setdeviceinfo(useragent",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["this.devicetype",{"_index":387,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.epicfunction",{"_index":678,"title":{},"body":{"index.html":{}}}],["this.exec(str",{"_index":459,"title":{},"body":{"classes/ReTree.html":{}}}],["this.getdeviceinfo",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isdesktop(this.useragent",{"_index":392,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.ismobile(this.useragent",{"_index":390,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.ismobile(useragent",{"_index":414,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.istablet",{"_index":388,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.istablet(useragent",{"_index":401,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.orientation",{"_index":381,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.os",{"_index":395,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.os_version",{"_index":397,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.retree.exec(ua",{"_index":378,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.retree.test(this.useragent",{"_index":348,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.retree.test(ua",{"_index":354,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.retree.test(useragent",{"_index":404,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.setdeviceinfo(this.useragent",{"_index":325,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.test(str",{"_index":452,"title":{},"body":{"classes/ReTree.html":{}}}],["this.ua",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["this.useragent",{"_index":289,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["this[mapping.prop",{"_index":342,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this[mapping.prop][currentvalue",{"_index":369,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["threads",{"_index":555,"title":{},"body":{"contributing.html":{}}}],["through",{"_index":526,"title":{},"body":{"contributing.html":{}}}],["time",{"_index":586,"title":{},"body":{"contributing.html":{}}}],["tips",{"_index":510,"title":{},"body":{"contributing.html":{}}}],["took",{"_index":585,"title":{},"body":{"contributing.html":{}}}],["top",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["tort",{"_index":810,"title":{},"body":{"license.html":{}}}],["transform",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"pipes/KeysPipe.html":{}}}],["transform(value",{"_index":421,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{}}}],["tried",{"_index":518,"title":{},"body":{"contributing.html":{}}}],["true",{"_index":407,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["try",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["ts",{"_index":710,"title":{},"body":{"index.html":{}}}],["tscto",{"_index":708,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":649,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":567,"title":{},"body":{"contributing.html":{}}}],["type",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{},"coverage.html":{}}}],["typeof",{"_index":322,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"classes/ReTree.html":{}}}],["typescript",{"_index":740,"title":{},"body":{"index.html":{}}}],["ua",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["undefined",{"_index":324,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["unit",{"_index":549,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["universal",{"_index":691,"title":{},"body":{"index.html":{}}}],["universaldevicedetectorservice",{"_index":265,"title":{"injectables/UniversalDeviceDetectorService.html":{}},"body":{"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"coverage.html":{},"index.html":{}}}],["unknown",{"_index":313,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"miscellaneous/enumerations.html":{}}}],["up",{"_index":721,"title":{},"body":{"index.html":{}}}],["update",{"_index":572,"title":{},"body":{"contributing.html":{}}}],["updates",{"_index":726,"title":{},"body":{"index.html":{}}}],["usage",{"_index":336,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["use",{"_index":665,"title":{},"body":{"index.html":{},"license.html":{}}}],["useclass",{"_index":275,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["used",{"_index":739,"title":{},"body":{"index.html":{}}}],["useful",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["user",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["useragent",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["useragentinputval",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["using",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"contributing.html":{},"index.html":{}}}],["v1.5.2",{"_index":666,"title":{},"body":{"index.html":{}}}],["value",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"injectables/UniversalDeviceDetectorService.html":{},"miscellaneous/enumerations.html":{}}}],["value.hasownproperty(key",{"_index":429,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["value[key",{"_index":431,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["var",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["variable",{"_index":602,"title":{},"body":{"coverage.html":{}}}],["version",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"contributing.html":{}}}],["version.full",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["void",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"miscellaneous/functions.html":{}}}],["want",{"_index":506,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["warranties",{"_index":795,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":791,"title":{},"body":{"license.html":{}}}],["way",{"_index":566,"title":{},"body":{"contributing.html":{}}}],["ways",{"_index":482,"title":{},"body":{"contributing.html":{}}}],["wdpromise",{"_index":238,"title":{},"body":{"classes/AppPage.html":{}}}],["wdpromise.promise",{"_index":231,"title":{},"body":{"classes/AppPage.html":{}}}],["web",{"_index":651,"title":{},"body":{"dependencies.html":{}}}],["webdriver",{"_index":240,"title":{},"body":{"classes/AppPage.html":{}}}],["whether",{"_index":290,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"license.html":{}}}],["width",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["window",{"_index":323,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["window.matchmedia",{"_index":380,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["window.matchmedia('(orientation",{"_index":382,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["window.navigator.useragent",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["windows",{"_index":684,"title":{},"body":{"index.html":{}}}],["without",{"_index":766,"title":{},"body":{"license.html":{}}}],["work",{"_index":738,"title":{},"body":{"index.html":{}}}],["working",{"_index":558,"title":{},"body":{"contributing.html":{}}}],["works",{"_index":735,"title":{},"body":{"index.html":{}}}],["wrapper",{"_index":741,"title":{},"body":{"index.html":{}}}],["write",{"_index":495,"title":{},"body":{"contributing.html":{}}}],["x1f389",{"_index":590,"title":{},"body":{"contributing.html":{}}}],["you'll",{"_index":694,"title":{},"body":{"index.html":{}}}],["you're",{"_index":513,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["zone.js",{"_index":655,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/demo/src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deviceInfo\n                            \n                            \n                                propsToShow\n                            \n                            \n                                ua\n                            \n                            \n                                userAgentInputVal\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyDevice\n                            \n                            \n                                getDeviceInfo\n                            \n                            \n                                resetDeviceInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isMobile\n                                \n                                \n                                    isTablet\n                                \n                                \n                                    isDesktop\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(deviceService: DeviceDetectorService)\n                    \n                \n                        \n                            \n                                Defined in projects/demo/src/app/app.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deviceService\n                                                  \n                                                        \n                                                                        DeviceDetectorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyDevice\n                        \n                        \n                    \n                \n            \n            \n                \napplyDevice(userAgent)\n                \n            \n\n\n            \n                \n                    Defined in projects/demo/src/app/app.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userAgent\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.ua\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDeviceInfo\n                        \n                        \n                    \n                \n            \n            \n                \ngetDeviceInfo()\n                \n            \n\n\n            \n                \n                    Defined in projects/demo/src/app/app.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetDeviceInfo\n                        \n                        \n                    \n                \n            \n            \n                \nresetDeviceInfo()\n                \n            \n\n\n            \n                \n                    Defined in projects/demo/src/app/app.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deviceInfo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/demo/src/app/app.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propsToShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['userAgent', 'os', 'browser', 'device', 'os_version', 'browser_version', 'deviceType', 'orientation']\n                        \n                    \n                        \n                            \n                                    Defined in projects/demo/src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ua\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/demo/src/app/app.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userAgentInputVal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/demo/src/app/app.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : VERSION.full\n                        \n                    \n                        \n                            \n                                    Defined in projects/demo/src/app/app.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isMobile\n                    \n                \n\n                \n                    \n                        getisMobile()\n                    \n                \n                            \n                                \n                                    Defined in projects/demo/src/app/app.component.ts:28\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isTablet\n                    \n                \n\n                \n                    \n                        getisTablet()\n                    \n                \n                            \n                                \n                                    Defined in projects/demo/src/app/app.component.ts:32\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isDesktop\n                    \n                \n\n                \n                    \n                        getisDesktop()\n                    \n                \n                            \n                                \n                                    Defined in projects/demo/src/app/app.component.ts:36\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, VERSION } from '@angular/core';\nimport { DeviceDetectorService } from 'ngx-device-detector';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  propsToShow = ['userAgent', 'os', 'browser', 'device', 'os_version', 'browser_version', 'deviceType', 'orientation'];\n  deviceInfo = null;\n  version = VERSION.full;\n  userAgentInputVal = null;\n  ua;\n  constructor(private deviceService: DeviceDetectorService) {\n    try {\n      this.ua = window.navigator.userAgent;\n    } catch {\n      console.log('UA not available');\n    }\n    this.applyDevice();\n  }\n\n  getDeviceInfo(): void {\n    this.deviceInfo = this.deviceService.getDeviceInfo();\n    console.log(this.deviceInfo);\n  }\n\n  get isMobile(): boolean {\n    return this.deviceService.isMobile();\n  }\n\n  get isTablet(): boolean {\n    return this.deviceService.isTablet();\n  }\n\n  get isDesktop(): boolean {\n    return this.deviceService.isDesktop();\n  }\n\n  applyDevice(userAgent = this.ua): void {\n    this.deviceService.setDeviceInfo(userAgent);\n    this.getDeviceInfo();\n  }\n\n  resetDeviceInfo(): void {\n    this.applyDevice();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n        ngx-device-detector\n      \n\n      \n        An Angular 5+ powered AOT compatible device detector that helps to identify browser, os and other useful information regarding the device using the app. The processing is based on user-agent.\n      \n\n      \n        \n        \n        \n        \n      \n      \n    \n    \n      Demo is at Angular version = {{version}}\n    \n    \n      \n        Open this page from different devices to see the appropriate details\n      \n      Device Information\n    \n    \n      \n        \n          Test User Agent\n          \n          Paste the user agent (window.navigator.userAgent) here\n        \n      \n      \n        Apply test user agent\n        Reset device info\n      \n    \n    \n      \n        \n        \n        \n          Mobile\n        \n        \n          Tablet\n        \n        \n          Desktop\n        \n      \n      \n        \n          Property\n          Value\n        \n        \n          {{info.key}}\n          {{info.value}}\n        \n        \n          isDesktop()\n          {{isDesktop}}\n        \n        \n          isMobile()\n          {{isMobile}}\n        \n        \n          isTablet()\n          {{isTablet}}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                :host {\n  position: relative;\n  display: block;\n}\n#demoApp {\n  max-width: 600px;\n  padding-top: 40px;\n  .demo-container {\n    .github-logo{\n      cursor: pointer;\n      position: absolute;\n      top: 10px;\n      right: 10px;\n      img {\n        width: 40px;\n        transform: rotate(45deg);\n      }\n      &:hover {\n        img {\n          opacity: 0.6;\n        }\n      }\n    }\n    .badges {\n      a {\n        margin-left: 4px;\n        margin-right: 4px;\n      }\n    }\n  }\n\n  .device-icon {\n    text-align: center;\n    padding: 20px;\n\n    .fa {\n      font-size: 100px;\n    }\n  }\n\n  .user-agent {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    &__input {\n      flex: 1;\n      input {\n        width: 100%;\n      }\n    }\n    &__buttons {\n      display: flex;\n      justify-content: flex-end;\n      > button {\n        &:first-child {\n          margin-right: 10px;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  ngx-device-detector                    An Angular 5+ powered AOT compatible device detector that helps to identify browser, os and other useful information regarding the device using the app. The processing is based on user-agent.                                                                      Demo is at Angular version = {{version}}                      Open this page from different devices to see the appropriate details            Device Information                                Test User Agent                    Paste the user agent (window.navigator.userAgent) here                            Apply test user agent        Reset device info                                                      Mobile                          Tablet                          Desktop                                      Property          Value                          {{info.key}}          {{info.value}}                          isDesktop()          {{isDesktop}}                          isMobile()          {{isMobile}}                          isTablet()          {{isTablet}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nKeysPipe\n\nKeysPipe\n\nAppModule -->\n\nKeysPipe->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/demo/src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            KeysPipe\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\nimport { KeysPipe } from './pipes/keys.pipe';\nimport { CommonModule } from '@angular/common';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [AppComponent, KeysPipe],\n  imports: [NoopAnimationsModule, BrowserModule.withServerTransition({ appId: 'serverApp' }), CommonModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/demo/e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDemoHeadingText\n                            \n                            \n                                getDeviceInfoElements\n                            \n                            \n                                getParagraphText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDemoHeadingText\n                        \n                        \n                    \n                \n            \n            \n                \ngetDemoHeadingText()\n                \n            \n\n\n            \n                \n                    Defined in projects/demo/e2e/src/app.po.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     wdpromise.Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDeviceInfoElements\n                        \n                        \n                    \n                \n            \n            \n                \ngetDeviceInfoElements()\n                \n            \n\n\n            \n                \n                    Defined in projects/demo/e2e/src/app.po.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ElementArrayFinder\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParagraphText\n                        \n                        \n                    \n                \n            \n            \n                \ngetParagraphText()\n                \n            \n\n\n            \n                \n                    Defined in projects/demo/e2e/src/app.po.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     wdpromise.Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in projects/demo/e2e/src/app.po.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     wdpromise.Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element, ElementArrayFinder } from 'protractor';\nimport { promise as wdpromise } from 'selenium-webdriver';\n\nexport class AppPage {\n  navigateTo(): wdpromise.Promise {\n    return browser.get('/');\n  }\n\n  getDemoHeadingText(): wdpromise.Promise {\n    return element(by.css('app-root .demo-heading-text')).getText();\n  }\n\n  getDeviceInfoElements(): ElementArrayFinder {\n    return element.all(by.css('app-root .information-table .info-item'));\n  }\n\n  getParagraphText(): wdpromise.Promise {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppServerModule.html":{"url":"modules/AppServerModule.html","title":"module - AppServerModule","body":"\n                   \n\n\n\n\n    Modules\n    AppServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppServerModule\n\n\n\ncluster_AppServerModule_imports\n\n\n\ncluster_AppServerModule_bootstrap\n\n\n\n\nAppModule\n\nAppModule\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/demo/src/app/server.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AppModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ServerModule } from '@angular/platform-server';\n\nimport { AppModule } from './app.module';\nimport { AppComponent } from './app.component';\nimport { Inject, Injectable, Optional, PLATFORM_ID } from '@angular/core';\nimport { REQUEST } from '@nguniversal/express-engine/tokens';\nimport { Request } from 'express';\nimport { DeviceDetectorService } from 'ngx-device-detector';\nimport { isPlatformServer } from '@angular/common';\n\n@Injectable()\nexport class UniversalDeviceDetectorService extends DeviceDetectorService {\n  constructor(@Inject(PLATFORM_ID) platformId: any, @Optional() @Inject(REQUEST) request: Request) {\n    super(platformId);\n    if (isPlatformServer(platformId)){\n      super.setDeviceInfo((request.headers['user-agent'] as string) || '');\n    }\n  }\n}\n\n@NgModule({\n  imports: [AppModule, ServerModule],\n  bootstrap: [AppComponent],\n  providers: [{\n    provide: DeviceDetectorService,\n    useClass: UniversalDeviceDetectorService\n  },]\n})\nexport class AppServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeviceDetectorService.html":{"url":"injectables/DeviceDetectorService.html","title":"injectable - DeviceDetectorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DeviceDetectorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-device-detector/src/lib/device-detector.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                browser\n                            \n                            \n                                browser_version\n                            \n                            \n                                device\n                            \n                            \n                                deviceType\n                            \n                            \n                                orientation\n                            \n                            \n                                os\n                            \n                            \n                                os_version\n                            \n                            \n                                reTree\n                            \n                            \n                                ua\n                            \n                            \n                                userAgent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDeviceInfo\n                            \n                            \n                                    Public\n                                isDesktop\n                            \n                            \n                                    Public\n                                isMobile\n                            \n                            \n                                    Public\n                                isTablet\n                            \n                            \n                                setDeviceInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platformId: any)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDeviceInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDeviceInfo()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         DeviceInfo\n\n                    \n                    \n                        the device information object.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isDesktop\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isDesktop(userAgent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userAgent\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.userAgent\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        whether the current device is a desktop device\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isMobile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isMobile(userAgent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userAgent\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.userAgent\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        whether the current device is a mobile\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isTablet\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isTablet(userAgent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userAgent\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.userAgent\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        whether the current device is a tablet\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDeviceInfo\n                        \n                        \n                    \n                \n            \n            \n                \nsetDeviceInfo(ua)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    ua\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.userAgent\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            browser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            browser_version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deviceType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orientation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            os\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            os_version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reTree\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ReTree()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ua\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userAgent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:38\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { PLATFORM_ID, Inject, Injectable } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport * as Constants from './device-detector.constants';\nimport { ReTree } from './retree';\n\nexport interface DeviceInfo {\n  userAgent: string;\n  os: string;\n  browser: string;\n  device: string;\n  os_version: string;\n  browser_version: string;\n  deviceType: string;\n  orientation: string;\n}\nexport enum DeviceType {\n  Mobile = 'mobile',\n  Tablet = 'tablet',\n  Desktop = 'desktop',\n  Unknown = 'unknown',\n}\nexport enum OrientationType {\n  Portrait = 'portrait',\n  Landscape = 'landscape',\n}\n\nconst iPad = 'iPad';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeviceDetectorService {\n  ua = '';\n  userAgent = '';\n  os = '';\n  browser = '';\n  device = '';\n  os_version = '';\n  browser_version = '';\n  reTree = new ReTree();\n  deviceType = '';\n  orientation = '';\n  constructor(@Inject(PLATFORM_ID) private platformId: any) {\n    if (isPlatformBrowser(this.platformId) && typeof window !== 'undefined') {\n      this.userAgent = window.navigator.userAgent;\n    }\n    this.setDeviceInfo(this.userAgent);\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Sets the initial value of the device when the service is initiated.\n   * This value is later accessible for usage\n   */\n  setDeviceInfo(ua = this.userAgent): void {\n    if (ua !== this.userAgent) {\n      this.userAgent = ua;\n    }\n    const mappings = [\n      { const: 'OS', prop: 'os' },\n      { const: 'BROWSERS', prop: 'browser' },\n      { const: 'DEVICES', prop: 'device' },\n      { const: 'OS_VERSIONS', prop: 'os_version' },\n    ];\n\n    mappings.forEach(mapping => {\n      this[mapping.prop] = Object.keys(Constants[mapping.const]).reduce((obj: any, item: any) => {\n        if (Constants[mapping.const][item] === 'device') {\n          // hack for iOS 13 Tablet\n          if (\n            isPlatformBrowser(this.platformId) &&\n            (!!this.reTree.test(this.userAgent, Constants.TABLETS_RE[iPad]) ||\n              (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1))\n          ) {\n            obj[Constants[mapping.const][item]] = iPad;\n            return Object;\n          }\n        }\n        obj[Constants[mapping.const][item]] = this.reTree.test(ua, Constants[`${mapping.const}_RE`][item]);\n        return obj;\n      }, {});\n    });\n\n    mappings.forEach(mapping => {\n      this[mapping.prop] = Object.keys(Constants[mapping.const])\n        .map(key => {\n          return Constants[mapping.const][key];\n        })\n        .reduce((previousValue, currentValue) => {\n          if (mapping.prop === 'device' && previousValue === Constants[mapping.const].ANDROID) {\n            // if we have the actual device found, instead of 'Android', return the actual device\n            return this[mapping.prop][currentValue] ? currentValue : previousValue;\n          } else {\n            return previousValue === Constants[mapping.const].UNKNOWN && this[mapping.prop][currentValue]\n              ? currentValue\n              : previousValue;\n          }\n        }, Constants[mapping.const].UNKNOWN);\n    });\n\n    this.browser_version = '0';\n    if (this.browser !== Constants.BROWSERS.UNKNOWN) {\n      const re = Constants.BROWSER_VERSIONS_RE[this.browser];\n      const res = this.reTree.exec(ua, re);\n      if (!!res) {\n        this.browser_version = res[1];\n      }\n    }\n    if (typeof window !== 'undefined' && window.matchMedia) {\n      this.orientation = window.matchMedia('(orientation: landscape)').matches\n        ? OrientationType.Landscape\n        : OrientationType.Portrait;\n    } else {\n      this.orientation = Constants.GENERAL.UKNOWN;\n    }\n\n    this.deviceType = this.isTablet()\n      ? DeviceType.Tablet\n      : this.isMobile(this.userAgent)\n      ? DeviceType.Mobile\n      : this.isDesktop(this.userAgent)\n      ? DeviceType.Desktop\n      : DeviceType.Unknown;\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Returns the device information\n   * @returns the device information object.\n   */\n  public getDeviceInfo(): DeviceInfo {\n    const deviceInfo: DeviceInfo = {\n      userAgent: this.userAgent,\n      os: this.os,\n      browser: this.browser,\n      device: this.device,\n      os_version: this.os_version,\n      browser_version: this.browser_version,\n      deviceType: this.deviceType,\n      orientation: this.orientation,\n    };\n    return deviceInfo;\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Compares the current device info with the mobile devices to check\n   * if the current device is a mobile and also check current device is tablet so it will return false.\n   * @returns whether the current device is a mobile\n   */\n  public isMobile(userAgent = this.userAgent): boolean {\n    if (this.isTablet(userAgent)) {\n      return false;\n    }\n    const match = Object.keys(Constants.MOBILES_RE).find(mobile => {\n      return this.reTree.test(userAgent, Constants.MOBILES_RE[mobile]);\n    });\n    return !!match;\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Compares the current device info with the tablet devices to check\n   * if the current device is a tablet.\n   * @returns whether the current device is a tablet\n   */\n  public isTablet(userAgent = this.userAgent): boolean {\n    if (\n      isPlatformBrowser(this.platformId) &&\n      (!!this.reTree.test(this.userAgent, Constants.TABLETS_RE[iPad]) ||\n        (typeof navigator !== 'undefined' && navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1))\n    ) {\n      return true;\n    }\n    const match = Object.keys(Constants.TABLETS_RE).find(mobile => {\n      return !!this.reTree.test(userAgent, Constants.TABLETS_RE[mobile]);\n    });\n    return !!match;\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Compares the current device info with the desktop devices to check\n   * if the current device is a desktop device.\n   * @returns whether the current device is a desktop device\n   */\n  public isDesktop(userAgent = this.userAgent): boolean {\n    const desktopDevices = [Constants.DEVICES.PS4, Constants.DEVICES.CHROME_BOOK, Constants.DEVICES.UNKNOWN];\n    if (this.device === Constants.DEVICES.UNKNOWN) {\n      if (this.isMobile(userAgent) || this.isTablet(userAgent)) {\n        return false;\n      }\n    }\n    return desktopDevices.indexOf(this.device) > -1;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DeviceInfo.html":{"url":"interfaces/DeviceInfo.html","title":"interface - DeviceInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DeviceInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-device-detector/src/lib/device-detector.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        browser\n                                \n                                \n                                        browser_version\n                                \n                                \n                                        device\n                                \n                                \n                                        deviceType\n                                \n                                \n                                        orientation\n                                \n                                \n                                        os\n                                \n                                \n                                        os_version\n                                \n                                \n                                        userAgent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        browser\n                                    \n                                \n                                \n                                    \n                                        browser:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        browser_version\n                                    \n                                \n                                \n                                    \n                                        browser_version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        device\n                                    \n                                \n                                \n                                    \n                                        device:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deviceType\n                                    \n                                \n                                \n                                    \n                                        deviceType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orientation\n                                    \n                                \n                                \n                                    \n                                        orientation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        os\n                                    \n                                \n                                \n                                    \n                                        os:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        os_version\n                                    \n                                \n                                \n                                    \n                                        os_version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userAgent\n                                    \n                                \n                                \n                                    \n                                        userAgent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PLATFORM_ID, Inject, Injectable } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport * as Constants from './device-detector.constants';\nimport { ReTree } from './retree';\n\nexport interface DeviceInfo {\n  userAgent: string;\n  os: string;\n  browser: string;\n  device: string;\n  os_version: string;\n  browser_version: string;\n  deviceType: string;\n  orientation: string;\n}\nexport enum DeviceType {\n  Mobile = 'mobile',\n  Tablet = 'tablet',\n  Desktop = 'desktop',\n  Unknown = 'unknown',\n}\nexport enum OrientationType {\n  Portrait = 'portrait',\n  Landscape = 'landscape',\n}\n\nconst iPad = 'iPad';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeviceDetectorService {\n  ua = '';\n  userAgent = '';\n  os = '';\n  browser = '';\n  device = '';\n  os_version = '';\n  browser_version = '';\n  reTree = new ReTree();\n  deviceType = '';\n  orientation = '';\n  constructor(@Inject(PLATFORM_ID) private platformId: any) {\n    if (isPlatformBrowser(this.platformId) && typeof window !== 'undefined') {\n      this.userAgent = window.navigator.userAgent;\n    }\n    this.setDeviceInfo(this.userAgent);\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Sets the initial value of the device when the service is initiated.\n   * This value is later accessible for usage\n   */\n  setDeviceInfo(ua = this.userAgent): void {\n    if (ua !== this.userAgent) {\n      this.userAgent = ua;\n    }\n    const mappings = [\n      { const: 'OS', prop: 'os' },\n      { const: 'BROWSERS', prop: 'browser' },\n      { const: 'DEVICES', prop: 'device' },\n      { const: 'OS_VERSIONS', prop: 'os_version' },\n    ];\n\n    mappings.forEach(mapping => {\n      this[mapping.prop] = Object.keys(Constants[mapping.const]).reduce((obj: any, item: any) => {\n        if (Constants[mapping.const][item] === 'device') {\n          // hack for iOS 13 Tablet\n          if (\n            isPlatformBrowser(this.platformId) &&\n            (!!this.reTree.test(this.userAgent, Constants.TABLETS_RE[iPad]) ||\n              (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1))\n          ) {\n            obj[Constants[mapping.const][item]] = iPad;\n            return Object;\n          }\n        }\n        obj[Constants[mapping.const][item]] = this.reTree.test(ua, Constants[`${mapping.const}_RE`][item]);\n        return obj;\n      }, {});\n    });\n\n    mappings.forEach(mapping => {\n      this[mapping.prop] = Object.keys(Constants[mapping.const])\n        .map(key => {\n          return Constants[mapping.const][key];\n        })\n        .reduce((previousValue, currentValue) => {\n          if (mapping.prop === 'device' && previousValue === Constants[mapping.const].ANDROID) {\n            // if we have the actual device found, instead of 'Android', return the actual device\n            return this[mapping.prop][currentValue] ? currentValue : previousValue;\n          } else {\n            return previousValue === Constants[mapping.const].UNKNOWN && this[mapping.prop][currentValue]\n              ? currentValue\n              : previousValue;\n          }\n        }, Constants[mapping.const].UNKNOWN);\n    });\n\n    this.browser_version = '0';\n    if (this.browser !== Constants.BROWSERS.UNKNOWN) {\n      const re = Constants.BROWSER_VERSIONS_RE[this.browser];\n      const res = this.reTree.exec(ua, re);\n      if (!!res) {\n        this.browser_version = res[1];\n      }\n    }\n    if (typeof window !== 'undefined' && window.matchMedia) {\n      this.orientation = window.matchMedia('(orientation: landscape)').matches\n        ? OrientationType.Landscape\n        : OrientationType.Portrait;\n    } else {\n      this.orientation = Constants.GENERAL.UKNOWN;\n    }\n\n    this.deviceType = this.isTablet()\n      ? DeviceType.Tablet\n      : this.isMobile(this.userAgent)\n      ? DeviceType.Mobile\n      : this.isDesktop(this.userAgent)\n      ? DeviceType.Desktop\n      : DeviceType.Unknown;\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Returns the device information\n   * @returns the device information object.\n   */\n  public getDeviceInfo(): DeviceInfo {\n    const deviceInfo: DeviceInfo = {\n      userAgent: this.userAgent,\n      os: this.os,\n      browser: this.browser,\n      device: this.device,\n      os_version: this.os_version,\n      browser_version: this.browser_version,\n      deviceType: this.deviceType,\n      orientation: this.orientation,\n    };\n    return deviceInfo;\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Compares the current device info with the mobile devices to check\n   * if the current device is a mobile and also check current device is tablet so it will return false.\n   * @returns whether the current device is a mobile\n   */\n  public isMobile(userAgent = this.userAgent): boolean {\n    if (this.isTablet(userAgent)) {\n      return false;\n    }\n    const match = Object.keys(Constants.MOBILES_RE).find(mobile => {\n      return this.reTree.test(userAgent, Constants.MOBILES_RE[mobile]);\n    });\n    return !!match;\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Compares the current device info with the tablet devices to check\n   * if the current device is a tablet.\n   * @returns whether the current device is a tablet\n   */\n  public isTablet(userAgent = this.userAgent): boolean {\n    if (\n      isPlatformBrowser(this.platformId) &&\n      (!!this.reTree.test(this.userAgent, Constants.TABLETS_RE[iPad]) ||\n        (typeof navigator !== 'undefined' && navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1))\n    ) {\n      return true;\n    }\n    const match = Object.keys(Constants.TABLETS_RE).find(mobile => {\n      return !!this.reTree.test(userAgent, Constants.TABLETS_RE[mobile]);\n    });\n    return !!match;\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Compares the current device info with the desktop devices to check\n   * if the current device is a desktop device.\n   * @returns whether the current device is a desktop device\n   */\n  public isDesktop(userAgent = this.userAgent): boolean {\n    const desktopDevices = [Constants.DEVICES.PS4, Constants.DEVICES.CHROME_BOOK, Constants.DEVICES.UNKNOWN];\n    if (this.device === Constants.DEVICES.UNKNOWN) {\n      if (this.isMobile(userAgent) || this.isTablet(userAgent)) {\n        return false;\n      }\n    }\n    return desktopDevices.indexOf(this.device) > -1;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/KeysPipe.html":{"url":"pipes/KeysPipe.html","title":"pipe - KeysPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  KeysPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/demo/src/app/pipes/keys.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        keys\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value, props: string[])\n                \n            \n\n\n            \n                \n                    Defined in projects/demo/src/app/pipes/keys.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    props\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'keys',\n})\nexport class KeysPipe implements PipeTransform {\n  transform(value, props: string[] = []): any {\n    const keys = [];\n    const noFilter = props.length === 0;\n    for (const key in value) {\n      if (noFilter) {\n        if (value.hasOwnProperty(key)) {\n          keys.push({ key, value: value[key] });\n        }\n      } else {\n        if (props.indexOf(key) !== -1) {\n          keys.push({ key, value: value[key] });\n        }\n      }\n    }\n    return keys;\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReTree.html":{"url":"classes/ReTree.html","title":"class - ReTree","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReTree\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-device-detector/src/lib/retree.ts\n        \n\n            \n                Description\n            \n            \n                Created by ahsanayaz on 08/11/2016.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                exec\n                            \n                            \n                                    Public\n                                test\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-device-detector/src/lib/retree.ts:5\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            exec\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    exec(str: string, regex: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-device-detector/src/lib/retree.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    regex\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            test\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    test(str: string, regex: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-device-detector/src/lib/retree.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    regex\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class ReTree {\n  constructor() {}\n\n  public test(str: string, regex: any): any {\n    if (typeof regex === 'string') {\n      regex = new RegExp(regex);\n    }\n\n    if (regex instanceof RegExp) {\n      return regex.test(str);\n    } else if (regex && Array.isArray(regex.and)) {\n      return regex.and.every((item: any) => {\n        return this.test(str, item);\n      });\n    } else if (regex && Array.isArray(regex.or)) {\n      return regex.or.some((item: any) => {\n        return this.test(str, item);\n      });\n    } else if (regex && regex.not) {\n      return !this.test(str, regex.not);\n    } else {\n      return false;\n    }\n  }\n\n  public exec(str: string, regex: any): any {\n    if (typeof regex === 'string') {\n      regex = new RegExp(regex);\n    }\n\n    if (regex instanceof RegExp) {\n      return regex.exec(str);\n    } else if (regex && Array.isArray(regex)) {\n      return regex.reduce((res: any, item: any) => {\n        return !!res ? res : this.exec(str, item);\n      }, null);\n    } else {\n      return null;\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UniversalDeviceDetectorService.html":{"url":"injectables/UniversalDeviceDetectorService.html","title":"injectable - UniversalDeviceDetectorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UniversalDeviceDetectorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/demo/src/app/server.ts\n        \n\n\n            \n                Extends\n            \n            \n                        DeviceDetectorService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                browser\n                            \n                            \n                                browser_version\n                            \n                            \n                                device\n                            \n                            \n                                deviceType\n                            \n                            \n                                orientation\n                            \n                            \n                                os\n                            \n                            \n                                os_version\n                            \n                            \n                                reTree\n                            \n                            \n                                ua\n                            \n                            \n                                userAgent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDeviceInfo\n                            \n                            \n                                    Public\n                                isDesktop\n                            \n                            \n                                    Public\n                                isMobile\n                            \n                            \n                                    Public\n                                isTablet\n                            \n                            \n                                setDeviceInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platformId: any, request: Request)\n                    \n                \n                        \n                            \n                                Defined in projects/demo/src/app/server.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDeviceInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDeviceInfo()\n                \n            \n\n\n            \n                \n                    Inherited from         DeviceDetectorService\n\n                \n            \n            \n                \n                        Defined in         DeviceDetectorService:135\n\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         DeviceInfo\n\n                    \n                    \n                        the device information object.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isDesktop\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isDesktop(userAgent)\n                \n            \n\n\n            \n                \n                    Inherited from         DeviceDetectorService\n\n                \n            \n            \n                \n                        Defined in         DeviceDetectorService:191\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userAgent\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.userAgent\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        whether the current device is a desktop device\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isMobile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isMobile(userAgent)\n                \n            \n\n\n            \n                \n                    Inherited from         DeviceDetectorService\n\n                \n            \n            \n                \n                        Defined in         DeviceDetectorService:155\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userAgent\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.userAgent\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        whether the current device is a mobile\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isTablet\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isTablet(userAgent)\n                \n            \n\n\n            \n                \n                    Inherited from         DeviceDetectorService\n\n                \n            \n            \n                \n                        Defined in         DeviceDetectorService:171\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userAgent\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.userAgent\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        whether the current device is a tablet\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDeviceInfo\n                        \n                        \n                    \n                \n            \n            \n                \nsetDeviceInfo(ua)\n                \n            \n\n\n            \n                \n                    Inherited from         DeviceDetectorService\n\n                \n            \n            \n                \n                        Defined in         DeviceDetectorService:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    ua\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.userAgent\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            browser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                            \n                                \n                                    Inherited from         DeviceDetectorService\n\n                                \n                            \n                        \n                            \n                                    Defined in         DeviceDetectorService:40\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            browser_version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                            \n                                \n                                    Inherited from         DeviceDetectorService\n\n                                \n                            \n                        \n                            \n                                    Defined in         DeviceDetectorService:43\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                            \n                                \n                                    Inherited from         DeviceDetectorService\n\n                                \n                            \n                        \n                            \n                                    Defined in         DeviceDetectorService:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deviceType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                            \n                                \n                                    Inherited from         DeviceDetectorService\n\n                                \n                            \n                        \n                            \n                                    Defined in         DeviceDetectorService:45\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orientation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                            \n                                \n                                    Inherited from         DeviceDetectorService\n\n                                \n                            \n                        \n                            \n                                    Defined in         DeviceDetectorService:46\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            os\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                            \n                                \n                                    Inherited from         DeviceDetectorService\n\n                                \n                            \n                        \n                            \n                                    Defined in         DeviceDetectorService:39\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            os_version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                            \n                                \n                                    Inherited from         DeviceDetectorService\n\n                                \n                            \n                        \n                            \n                                    Defined in         DeviceDetectorService:42\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reTree\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ReTree()\n                        \n                    \n                            \n                                \n                                    Inherited from         DeviceDetectorService\n\n                                \n                            \n                        \n                            \n                                    Defined in         DeviceDetectorService:44\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ua\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                            \n                                \n                                    Inherited from         DeviceDetectorService\n\n                                \n                            \n                        \n                            \n                                    Defined in         DeviceDetectorService:37\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userAgent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                            \n                                \n                                    Inherited from         DeviceDetectorService\n\n                                \n                            \n                        \n                            \n                                    Defined in         DeviceDetectorService:38\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ServerModule } from '@angular/platform-server';\n\nimport { AppModule } from './app.module';\nimport { AppComponent } from './app.component';\nimport { Inject, Injectable, Optional, PLATFORM_ID } from '@angular/core';\nimport { REQUEST } from '@nguniversal/express-engine/tokens';\nimport { Request } from 'express';\nimport { DeviceDetectorService } from 'ngx-device-detector';\nimport { isPlatformServer } from '@angular/common';\n\n@Injectable()\nexport class UniversalDeviceDetectorService extends DeviceDetectorService {\n  constructor(@Inject(PLATFORM_ID) platformId: any, @Optional() @Inject(REQUEST) request: Request) {\n    super(platformId);\n    if (isPlatformServer(platformId)){\n      super.setDeviceInfo((request.headers['user-agent'] as string) || '');\n    }\n  }\n}\n\n@NgModule({\n  imports: [AppModule, ServerModule],\n  bootstrap: [AppComponent],\n  providers: [{\n    provide: DeviceDetectorService,\n    useClass: UniversalDeviceDetectorService\n  },]\n})\nexport class AppServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nHow to Contribute\nThere are many ways you can Contribute to this project!\n\nCreate issues or help close them\nFork, Enhance, Fix Bugs, and send in Pull Requests\nHelp write Tests or improve Examples / Documentation\nShare repo with others.\n\nIssues\nFound a bug, have some feedback or really want some feature? Lock in an Issue. Here are some tips:\n\nMake sure the bug you're reporting really is a bug and you have read the docs/readme.\nProvide as many details as you can about the bug. How can it be reproduced? What have you tried so far?\nFor feature requests, really explain why your feature is important and how it improves the library and helps the developers using it.\nGo through existing issues. Make sure that it hasn't already been opened.\nIf planning on helping close an issue, don't be shy. Ask questions and get more information before sending your PR.Pull Requests\n\n\nWant to fix a bug, implement a feature or help with the tests / docs? Please read this first:\n\nMake sure there's an open issue for what you're sending in your Pull Request. If not, open it.\nSend in your PRs agains the master branch.\nWrite unit tests / docs for any new feature you implement.\nMake sure your PRs pass all tests and CI.\nBe active in your relevant issue and PR threads.\nMake sure no one else is assigned or working on the issue. It's a good idea to leave a comment stating that you're going to implement it before sending in your PR. \nThis way no two devs are working on the same thing.\nIf required, update the CHANGELOG.md file with a small summary of your changes in the latest version (add a new section if needed)\n\nFinally, Thank you!\nIt means a lot that you took time out to improve this package and contribute back to the community. &#x1F389;\nRelevant Links\nProject Page\nAuthor\nNPM Package\nLicense\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/demo/e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/demo/server.ts\n            \n            function\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/demo/server.ts\n            \n            function\n            run\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/demo/server.ts\n            \n            variable\n            __non_webpack_require__\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/demo/server.ts\n            \n            variable\n            mainModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/demo/server.ts\n            \n            variable\n            moduleFilename\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/demo/src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/demo/src/app/pipes/keys.pipe.ts\n            \n            pipe\n            KeysPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/demo/src/app/server.ts\n            \n            injectable\n            UniversalDeviceDetectorService\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/demo/src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/demo/src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/demo/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/demo/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            BROWSER_VERSIONS_RE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            BROWSER_VERSIONS_RE_MAP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            BROWSERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            BROWSERS_RE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            DEVICES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            DEVICES_RE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            GENERAL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            MOBILES_RE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            OS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            OS_RE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            OS_VERSIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            OS_VERSIONS_RE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            OS_VERSIONS_RE_MAP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            TABLETS_RE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.service.ts\n            \n            injectable\n            DeviceDetectorService\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.service.ts\n            \n            interface\n            DeviceInfo\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.service.ts\n            \n            variable\n            iPad\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/retree.ts\n            \n            class\n            ReTree\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.0.2\n        \n            @angular/common : ~11.0.2\n        \n            @angular/compiler : ~11.0.2\n        \n            @angular/core : ~11.0.2\n        \n            @angular/forms : ~11.0.2\n        \n            @angular/platform-browser : ~11.0.2\n        \n            @angular/platform-browser-dynamic : ~11.0.2\n        \n            @angular/platform-server : ~11.0.2\n        \n            @angular/router : ~11.0.2\n        \n            @nguniversal/express-engine : ^10.0.2\n        \n            classlist.js : ^1.1.20150312\n        \n            conventional-changelog-cli : ^2.1.1\n        \n            express : ^4.15.2\n        \n            ngx-device-detector : ^2.0.5\n        \n            rxjs : ~6.5.5\n        \n            tslib : ^2.0.0\n        \n            web-animations-js : ^2.3.2\n        \n            zone.js : ~0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DeviceType   (projects/.../device-detector.service.ts)\n                        \n                        \n                            OrientationType   (projects/.../device-detector.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-device-detector/src/lib/device-detector.service.ts\n    \n        \n            \n                \n                    \n                        \n                        DeviceType\n                    \n                \n                        \n                            \n                                 Mobile\n                            \n                        \n                        \n                            \n                                Value : mobile\n                            \n                        \n                        \n                            \n                                 Tablet\n                            \n                        \n                        \n                            \n                                Value : tablet\n                            \n                        \n                        \n                            \n                                 Desktop\n                            \n                        \n                        \n                            \n                                Value : desktop\n                            \n                        \n                        \n                            \n                                 Unknown\n                            \n                        \n                        \n                            \n                                Value : unknown\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        OrientationType\n                    \n                \n                        \n                            \n                                 Portrait\n                            \n                        \n                        \n                            \n                                Value : portrait\n                            \n                        \n                        \n                            \n                                 Landscape\n                            \n                        \n                        \n                            \n                                Value : landscape\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            app   (projects/.../server.ts)\n                        \n                        \n                            run   (projects/.../server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/demo/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            app\n                        \n                        \n                    \n                \n            \n            \n                \napp()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     express.Express\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            run\n                        \n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  ngx-device-detector\n\n\n\nAn Angular 6+ powered AOT compatible device detector that helps to identify browser, os and other useful information regarding the device using the app. The processing is based on user-agent.\n\n\n\n\n\n\n\n\n\n  Deprecated package :\n  \n  \n\n\n  New package :\n  \n  \nIf you use Angular 5, you must use v1.5.2 or earlier\n\n\nDOCS\nNgx Device Detector DOCS\nLive DEMO\nDemo\nSSR Demo\nInstallation\nTo install this library, run:\n$ npm install ngx-device-detector --saveIn your component where you want to use the Device Service\n  import { Component } from '@angular/core';\n  ...\n  import { DeviceDetectorService } from 'ngx-device-detector';\n  ...\n  @Component({\n    selector: 'home',  // \n    styleUrls: [ './home.component.scss' ],\n    templateUrl: './home.component.html',\n    ...\n  })\n\n  export class HomeComponent {\n    deviceInfo = null;\n    ...\n    constructor(..., private http: Http, private deviceService: DeviceDetectorService) {\n      this.epicFunction();\n    }\n    ...\n    epicFunction() {\n      console.log('hello `Home` component');\n      this.deviceInfo = this.deviceService.getDeviceInfo();\n      const isMobile = this.deviceService.isMobile();\n      const isTablet = this.deviceService.isTablet();\n      const isDesktopDevice = this.deviceService.isDesktop();\n      console.log(this.deviceInfo);\n      console.log(isMobile);  // returns if the device is a mobile device (android / iPhone / windows-phone etc)\n      console.log(isTablet);  // returns if the device us a tablet (iPad etc)\n      console.log(isDesktopDevice); // returns if the app is running on a Desktop browser.\n    }\n    ...\n  }\nTo ensure Universal has the correct User Agent for device detection, you'll need to provide it manually. If using ExpressJS for example:\nuniversal-device-detector.service.ts:\nimport { Inject, Injectable, Optional, PLATFORM_ID } from '@angular/core';\nimport { REQUEST } from '@nguniversal/express-engine/tokens';\nimport { Request } from 'express';\nimport { DeviceDetectorService } from 'ngx-device-detector';\nimport { isPlatformServer } from '@angular/common';\n\n@Injectable()\nexport class UniversalDeviceDetectorService extends DeviceDetectorService {\n  constructor(@Inject(PLATFORM_ID) platformId: any, @Optional() @Inject(REQUEST) request: Request) {\n    super(platformId);\n    if (isPlatformServer(platformId)) {\n      super.setDeviceInfo((request.headers['user-agent'] as string) || '');\n    }\n  }\n}app.server.module.ts:\n{\n  provide: DeviceDetectorService,\n  useClass: UniversalDeviceDetectorService\n},Device service\nHolds the following properties\n\nbrowser\nos\ndevice\nuserAgent\nos_version\n\nHelper Methods\n\nisMobile() : returns if the device is a mobile device (android / iPhone/ windows-phone etc)\nisTablet() : returns if the device us a tablet (iPad etc)\nisDesktop() : returns if the app is running on a Desktop browser.\n\nDevelopment\nTo generate all *.js, *.js.map and *.d.ts files:\n  $ npm run tscTo lint all *.ts files:\n  $ npm run lintTo run unit tests\n  $ npm run testTo build the library\n  $ npm run buildRun the DEMO\nMake sure you have @angular/cli installed\n  $ npm install -g @angular/cli  $ cd demo\n  $ npm install\n  $ ng servethe demo will be up at localhost:4200\nChange Log\nPlease see CHANGE_LOG.MD for the updates.\nIE10, IE11 Compatibility\nIf you're consuming the library for IE10 & IE11, please refer to the polyfills.ts file in your project.\nFor example, for an Angular 9.x+ project, you can refer to the changes done in this PR for our demo project that works on IE11\nCredits\nThe library is inspired by and based on the work from ng-device-detector . Also used a typescript wrapper of the amazing work in ReTree for regex based needs and an Angular2 Library Creator boilerplate to get the work started fast. I.e. Generator Angular2 library.\nLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2021 Muhammad Ahsan Ayaz\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppServerModule\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nKeysPipe\n\nKeysPipe\n\nAppModule -->\n\nKeysPipe->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
